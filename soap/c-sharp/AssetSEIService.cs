//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18063
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=4.0.30319.17929.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="AssetSEIPortBinding", Namespace="http://portfolio.extensis/service/asset")]
public partial class AssetSEIService : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback addAssetsByPathOperationCompleted;
    
    private System.Threading.SendOrPostCallback addItemsToGalleryOperationCompleted;
    
    private System.Threading.SendOrPostCallback cancelJobOperationCompleted;
    
    private System.Threading.SendOrPostCallback createGalleryOperationCompleted;
    
    private System.Threading.SendOrPostCallback getWatchFolderOperationCompleted;
    
    private System.Threading.SendOrPostCallback addWatchFolderOperationCompleted;
    
    private System.Threading.SendOrPostCallback updateWatchFolderOperationCompleted;
    
    private System.Threading.SendOrPostCallback removeWatchFolderOperationCompleted;
    
    private System.Threading.SendOrPostCallback createSubfolderOperationCompleted;
    
    private System.Threading.SendOrPostCallback deleteGalleryOperationCompleted;
    
    private System.Threading.SendOrPostCallback deleteSubfolderOperationCompleted;
    
    private System.Threading.SendOrPostCallback getAssetPreviewOperationCompleted;
    
    private System.Threading.SendOrPostCallback getAssetsOperationCompleted;
    
    private System.Threading.SendOrPostCallback getAutomationScriptsOperationCompleted;
    
    private System.Threading.SendOrPostCallback getCatalogPermissionsOperationCompleted;
    
    private System.Threading.SendOrPostCallback getCatalogsOperationCompleted;
    
    private System.Threading.SendOrPostCallback getDetailsForWatchFolderOperationCompleted;
    
    private System.Threading.SendOrPostCallback getErrorDetailsForJobOperationCompleted;
    
    private System.Threading.SendOrPostCallback getFieldDefinitionsOperationCompleted;
    
    private System.Threading.SendOrPostCallback addOrRemovePredefinedValuesOperationCompleted;
    
    private System.Threading.SendOrPostCallback setPredefinedValuesOperationCompleted;
    
    private System.Threading.SendOrPostCallback addNestedPredefinedValuesOperationCompleted;
    
    private System.Threading.SendOrPostCallback changeNestedPredefinedValueOperationCompleted;
    
    private System.Threading.SendOrPostCallback moveNestedPredefinedValueOperationCompleted;
    
    private System.Threading.SendOrPostCallback deleteNestedPredefinedValuesOperationCompleted;
    
    private System.Threading.SendOrPostCallback getFolderTreeForWatchFolderOperationCompleted;
    
    private System.Threading.SendOrPostCallback getGalleriesOperationCompleted;
    
    private System.Threading.SendOrPostCallback getJobIDsOperationCompleted;
    
    private System.Threading.SendOrPostCallback getRSAPublicEncryptionKeyOperationCompleted;
    
    private System.Threading.SendOrPostCallback getServerFeaturesOperationCompleted;
    
    private System.Threading.SendOrPostCallback getServerSystemInformationOperationCompleted;
    
    private System.Threading.SendOrPostCallback getStatusForJobsOperationCompleted;
    
    private System.Threading.SendOrPostCallback getWatchFoldersOperationCompleted;
    
    private System.Threading.SendOrPostCallback loginOperationCompleted;
    
    private System.Threading.SendOrPostCallback logoutOperationCompleted;
    
    private System.Threading.SendOrPostCallback moveSubfolderOperationCompleted;
    
    private System.Threading.SendOrPostCallback removeAssetsFromCatalogOperationCompleted;
    
    private System.Threading.SendOrPostCallback removeItemsFromGalleryOperationCompleted;
    
    private System.Threading.SendOrPostCallback runJobOperationCompleted;
    
    private System.Threading.SendOrPostCallback getCatalogingOptionsOperationCompleted;
    
    private System.Threading.SendOrPostCallback getIngestConfigOperationCompleted;
    
    private System.Threading.SendOrPostCallback synchronizeFolderOperationCompleted;
    
    private System.Threading.SendOrPostCallback getServerFolderNamesOperationCompleted;
    
    private System.Threading.SendOrPostCallback updateAssetFieldValuesOperationCompleted;
    
    private System.Threading.SendOrPostCallback updateGalleryOperationCompleted;
    
    private System.Threading.SendOrPostCallback createTaskPresetOperationCompleted;
    
    private System.Threading.SendOrPostCallback listTaskSettingsOperationCompleted;
    
    private System.Threading.SendOrPostCallback listColorModeOperationCompleted;
    
    private System.Threading.SendOrPostCallback listOutputFileFormatOperationCompleted;
    
    private System.Threading.SendOrPostCallback listOutputDestinationOperationCompleted;
    
    private System.Threading.SendOrPostCallback listRenameTypeOperationCompleted;
    
    private System.Threading.SendOrPostCallback listDNGEmbedRawFileOperationCompleted;
    
    private System.Threading.SendOrPostCallback listWatermarkTypeOperationCompleted;
    
    private System.Threading.SendOrPostCallback listWatermarkPositionOperationCompleted;
    
    private System.Threading.SendOrPostCallback listAddToCatalogOperationCompleted;
    
    private System.Threading.SendOrPostCallback listCompressionTypeOperationCompleted;
    
    private System.Threading.SendOrPostCallback listDngCameraRawVersionOperationCompleted;
    
    private System.Threading.SendOrPostCallback listDngJpegPreviewTypeOperationCompleted;
    
    private System.Threading.SendOrPostCallback listResizeTypeOperationCompleted;
    
    private System.Threading.SendOrPostCallback listUnitOperationCompleted;
    
    private System.Threading.SendOrPostCallback deleteTaskOperationCompleted;
    
    private System.Threading.SendOrPostCallback getAssetsWithBatchOfValuesOperationCompleted;
    
    private System.Threading.SendOrPostCallback getCatalogChangeStatusOperationCompleted;
    
    private System.Threading.SendOrPostCallback getDefaultViewSettingsOperationCompleted;
    
    private System.Threading.SendOrPostCallback getExclusionInfoForCatalogOperationCompleted;
    
    private System.Threading.SendOrPostCallback getTaskPresetsOperationCompleted;
    
    private System.Threading.SendOrPostCallback getUnmatchedFieldValuesFromBatchFindOperationCompleted;
    
    private System.Threading.SendOrPostCallback getUserPreferencesOperationCompleted;
    
    private System.Threading.SendOrPostCallback getUserViewSettingsOperationCompleted;
    
    private System.Threading.SendOrPostCallback primeAssetPreviewsOperationCompleted;
    
    private System.Threading.SendOrPostCallback setDefaultViewSettingsOperationCompleted;
    
    private System.Threading.SendOrPostCallback setSessionInactivityTimeoutOperationCompleted;
    
    private System.Threading.SendOrPostCallback setUserPreferencesOperationCompleted;
    
    private System.Threading.SendOrPostCallback setUserViewSettingsOperationCompleted;
    
    private System.Threading.SendOrPostCallback updateTaskPresetOperationCompleted;
    
    private System.Threading.SendOrPostCallback uploadFileOperationCompleted;
    
    private System.Threading.SendOrPostCallback getVideoExtensionsOperationCompleted;
    
    private System.Threading.SendOrPostCallback getAudioExtensionsOperationCompleted;
    
    private System.Threading.SendOrPostCallback completionOperationCompleted;
    
    /// <remarks/>
    public AssetSEIService() {
        this.Url = "http://127.0.0.1:8090/ws/1.0/AssetService";
    }
    
    /// <remarks/>
    public event addAssetsByPathCompletedEventHandler addAssetsByPathCompleted;
    
    /// <remarks/>
    public event addItemsToGalleryCompletedEventHandler addItemsToGalleryCompleted;
    
    /// <remarks/>
    public event cancelJobCompletedEventHandler cancelJobCompleted;
    
    /// <remarks/>
    public event createGalleryCompletedEventHandler createGalleryCompleted;
    
    /// <remarks/>
    public event getWatchFolderCompletedEventHandler getWatchFolderCompleted;
    
    /// <remarks/>
    public event addWatchFolderCompletedEventHandler addWatchFolderCompleted;
    
    /// <remarks/>
    public event updateWatchFolderCompletedEventHandler updateWatchFolderCompleted;
    
    /// <remarks/>
    public event removeWatchFolderCompletedEventHandler removeWatchFolderCompleted;
    
    /// <remarks/>
    public event createSubfolderCompletedEventHandler createSubfolderCompleted;
    
    /// <remarks/>
    public event deleteGalleryCompletedEventHandler deleteGalleryCompleted;
    
    /// <remarks/>
    public event deleteSubfolderCompletedEventHandler deleteSubfolderCompleted;
    
    /// <remarks/>
    public event getAssetPreviewCompletedEventHandler getAssetPreviewCompleted;
    
    /// <remarks/>
    public event getAssetsCompletedEventHandler getAssetsCompleted;
    
    /// <remarks/>
    public event getAutomationScriptsCompletedEventHandler getAutomationScriptsCompleted;
    
    /// <remarks/>
    public event getCatalogPermissionsCompletedEventHandler getCatalogPermissionsCompleted;
    
    /// <remarks/>
    public event getCatalogsCompletedEventHandler getCatalogsCompleted;
    
    /// <remarks/>
    public event getDetailsForWatchFolderCompletedEventHandler getDetailsForWatchFolderCompleted;
    
    /// <remarks/>
    public event getErrorDetailsForJobCompletedEventHandler getErrorDetailsForJobCompleted;
    
    /// <remarks/>
    public event getFieldDefinitionsCompletedEventHandler getFieldDefinitionsCompleted;
    
    /// <remarks/>
    public event addOrRemovePredefinedValuesCompletedEventHandler addOrRemovePredefinedValuesCompleted;
    
    /// <remarks/>
    public event setPredefinedValuesCompletedEventHandler setPredefinedValuesCompleted;
    
    /// <remarks/>
    public event addNestedPredefinedValuesCompletedEventHandler addNestedPredefinedValuesCompleted;
    
    /// <remarks/>
    public event changeNestedPredefinedValueCompletedEventHandler changeNestedPredefinedValueCompleted;
    
    /// <remarks/>
    public event moveNestedPredefinedValueCompletedEventHandler moveNestedPredefinedValueCompleted;
    
    /// <remarks/>
    public event deleteNestedPredefinedValuesCompletedEventHandler deleteNestedPredefinedValuesCompleted;
    
    /// <remarks/>
    public event getFolderTreeForWatchFolderCompletedEventHandler getFolderTreeForWatchFolderCompleted;
    
    /// <remarks/>
    public event getGalleriesCompletedEventHandler getGalleriesCompleted;
    
    /// <remarks/>
    public event getJobIDsCompletedEventHandler getJobIDsCompleted;
    
    /// <remarks/>
    public event getRSAPublicEncryptionKeyCompletedEventHandler getRSAPublicEncryptionKeyCompleted;
    
    /// <remarks/>
    public event getServerFeaturesCompletedEventHandler getServerFeaturesCompleted;
    
    /// <remarks/>
    public event getServerSystemInformationCompletedEventHandler getServerSystemInformationCompleted;
    
    /// <remarks/>
    public event getStatusForJobsCompletedEventHandler getStatusForJobsCompleted;
    
    /// <remarks/>
    public event getWatchFoldersCompletedEventHandler getWatchFoldersCompleted;
    
    /// <remarks/>
    public event loginCompletedEventHandler loginCompleted;
    
    /// <remarks/>
    public event logoutCompletedEventHandler logoutCompleted;
    
    /// <remarks/>
    public event moveSubfolderCompletedEventHandler moveSubfolderCompleted;
    
    /// <remarks/>
    public event removeAssetsFromCatalogCompletedEventHandler removeAssetsFromCatalogCompleted;
    
    /// <remarks/>
    public event removeItemsFromGalleryCompletedEventHandler removeItemsFromGalleryCompleted;
    
    /// <remarks/>
    public event runJobCompletedEventHandler runJobCompleted;
    
    /// <remarks/>
    public event getCatalogingOptionsCompletedEventHandler getCatalogingOptionsCompleted;
    
    /// <remarks/>
    public event getIngestConfigCompletedEventHandler getIngestConfigCompleted;
    
    /// <remarks/>
    public event synchronizeFolderCompletedEventHandler synchronizeFolderCompleted;
    
    /// <remarks/>
    public event getServerFolderNamesCompletedEventHandler getServerFolderNamesCompleted;
    
    /// <remarks/>
    public event updateAssetFieldValuesCompletedEventHandler updateAssetFieldValuesCompleted;
    
    /// <remarks/>
    public event updateGalleryCompletedEventHandler updateGalleryCompleted;
    
    /// <remarks/>
    public event createTaskPresetCompletedEventHandler createTaskPresetCompleted;
    
    /// <remarks/>
    public event listTaskSettingsCompletedEventHandler listTaskSettingsCompleted;
    
    /// <remarks/>
    public event listColorModeCompletedEventHandler listColorModeCompleted;
    
    /// <remarks/>
    public event listOutputFileFormatCompletedEventHandler listOutputFileFormatCompleted;
    
    /// <remarks/>
    public event listOutputDestinationCompletedEventHandler listOutputDestinationCompleted;
    
    /// <remarks/>
    public event listRenameTypeCompletedEventHandler listRenameTypeCompleted;
    
    /// <remarks/>
    public event listDNGEmbedRawFileCompletedEventHandler listDNGEmbedRawFileCompleted;
    
    /// <remarks/>
    public event listWatermarkTypeCompletedEventHandler listWatermarkTypeCompleted;
    
    /// <remarks/>
    public event listWatermarkPositionCompletedEventHandler listWatermarkPositionCompleted;
    
    /// <remarks/>
    public event listAddToCatalogCompletedEventHandler listAddToCatalogCompleted;
    
    /// <remarks/>
    public event listCompressionTypeCompletedEventHandler listCompressionTypeCompleted;
    
    /// <remarks/>
    public event listDngCameraRawVersionCompletedEventHandler listDngCameraRawVersionCompleted;
    
    /// <remarks/>
    public event listDngJpegPreviewTypeCompletedEventHandler listDngJpegPreviewTypeCompleted;
    
    /// <remarks/>
    public event listResizeTypeCompletedEventHandler listResizeTypeCompleted;
    
    /// <remarks/>
    public event listUnitCompletedEventHandler listUnitCompleted;
    
    /// <remarks/>
    public event deleteTaskCompletedEventHandler deleteTaskCompleted;
    
    /// <remarks/>
    public event getAssetsWithBatchOfValuesCompletedEventHandler getAssetsWithBatchOfValuesCompleted;
    
    /// <remarks/>
    public event getCatalogChangeStatusCompletedEventHandler getCatalogChangeStatusCompleted;
    
    /// <remarks/>
    public event getDefaultViewSettingsCompletedEventHandler getDefaultViewSettingsCompleted;
    
    /// <remarks/>
    public event getExclusionInfoForCatalogCompletedEventHandler getExclusionInfoForCatalogCompleted;
    
    /// <remarks/>
    public event getTaskPresetsCompletedEventHandler getTaskPresetsCompleted;
    
    /// <remarks/>
    public event getUnmatchedFieldValuesFromBatchFindCompletedEventHandler getUnmatchedFieldValuesFromBatchFindCompleted;
    
    /// <remarks/>
    public event getUserPreferencesCompletedEventHandler getUserPreferencesCompleted;
    
    /// <remarks/>
    public event getUserViewSettingsCompletedEventHandler getUserViewSettingsCompleted;
    
    /// <remarks/>
    public event primeAssetPreviewsCompletedEventHandler primeAssetPreviewsCompleted;
    
    /// <remarks/>
    public event setDefaultViewSettingsCompletedEventHandler setDefaultViewSettingsCompleted;
    
    /// <remarks/>
    public event setSessionInactivityTimeoutCompletedEventHandler setSessionInactivityTimeoutCompleted;
    
    /// <remarks/>
    public event setUserPreferencesCompletedEventHandler setUserPreferencesCompleted;
    
    /// <remarks/>
    public event setUserViewSettingsCompletedEventHandler setUserViewSettingsCompleted;
    
    /// <remarks/>
    public event updateTaskPresetCompletedEventHandler updateTaskPresetCompleted;
    
    /// <remarks/>
    public event uploadFileCompletedEventHandler uploadFileCompleted;
    
    /// <remarks/>
    public event getVideoExtensionsCompletedEventHandler getVideoExtensionsCompleted;
    
    /// <remarks/>
    public event getAudioExtensionsCompletedEventHandler getAudioExtensionsCompleted;
    
    /// <remarks/>
    public event completionCompletedEventHandler completionCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public string[] addAssetsByPath([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string catalogId, [System.Xml.Serialization.XmlElementAttribute("assetPaths", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string[] assetPaths) {
        object[] results = this.Invoke("addAssetsByPath", new object[] {
                    sessionId,
                    catalogId,
                    assetPaths});
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddAssetsByPath(string sessionId, string catalogId, string[] assetPaths, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addAssetsByPath", new object[] {
                    sessionId,
                    catalogId,
                    assetPaths}, callback, asyncState);
    }
    
    /// <remarks/>
    public string[] EndaddAssetsByPath(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public void addAssetsByPathAsync(string sessionId, string catalogId, string[] assetPaths) {
        this.addAssetsByPathAsync(sessionId, catalogId, assetPaths, null);
    }
    
    /// <remarks/>
    public void addAssetsByPathAsync(string sessionId, string catalogId, string[] assetPaths, object userState) {
        if ((this.addAssetsByPathOperationCompleted == null)) {
            this.addAssetsByPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddAssetsByPathOperationCompleted);
        }
        this.InvokeAsync("addAssetsByPath", new object[] {
                    sessionId,
                    catalogId,
                    assetPaths}, this.addAssetsByPathOperationCompleted, userState);
    }
    
    private void OnaddAssetsByPathOperationCompleted(object arg) {
        if ((this.addAssetsByPathCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.addAssetsByPathCompleted(this, new addAssetsByPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void addItemsToGallery([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string catalogId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string galleryId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] assetQuery assets) {
        this.Invoke("addItemsToGallery", new object[] {
                    sessionId,
                    catalogId,
                    galleryId,
                    assets});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddItemsToGallery(string sessionId, string catalogId, string galleryId, assetQuery assets, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addItemsToGallery", new object[] {
                    sessionId,
                    catalogId,
                    galleryId,
                    assets}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndaddItemsToGallery(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void addItemsToGalleryAsync(string sessionId, string catalogId, string galleryId, assetQuery assets) {
        this.addItemsToGalleryAsync(sessionId, catalogId, galleryId, assets, null);
    }
    
    /// <remarks/>
    public void addItemsToGalleryAsync(string sessionId, string catalogId, string galleryId, assetQuery assets, object userState) {
        if ((this.addItemsToGalleryOperationCompleted == null)) {
            this.addItemsToGalleryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddItemsToGalleryOperationCompleted);
        }
        this.InvokeAsync("addItemsToGallery", new object[] {
                    sessionId,
                    catalogId,
                    galleryId,
                    assets}, this.addItemsToGalleryOperationCompleted, userState);
    }
    
    private void OnaddItemsToGalleryOperationCompleted(object arg) {
        if ((this.addItemsToGalleryCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.addItemsToGalleryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void cancelJob([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string jobId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool deleteJob) {
        this.Invoke("cancelJob", new object[] {
                    sessionId,
                    jobId,
                    deleteJob});
    }
    
    /// <remarks/>
    public System.IAsyncResult BegincancelJob(string sessionId, string jobId, bool deleteJob, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("cancelJob", new object[] {
                    sessionId,
                    jobId,
                    deleteJob}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndcancelJob(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void cancelJobAsync(string sessionId, string jobId, bool deleteJob) {
        this.cancelJobAsync(sessionId, jobId, deleteJob, null);
    }
    
    /// <remarks/>
    public void cancelJobAsync(string sessionId, string jobId, bool deleteJob, object userState) {
        if ((this.cancelJobOperationCompleted == null)) {
            this.cancelJobOperationCompleted = new System.Threading.SendOrPostCallback(this.OncancelJobOperationCompleted);
        }
        this.InvokeAsync("cancelJob", new object[] {
                    sessionId,
                    jobId,
                    deleteJob}, this.cancelJobOperationCompleted, userState);
    }
    
    private void OncancelJobOperationCompleted(object arg) {
        if ((this.cancelJobCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.cancelJobCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public gallery createGallery([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string catalogId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] gallery gallery) {
        object[] results = this.Invoke("createGallery", new object[] {
                    sessionId,
                    catalogId,
                    gallery});
        return ((gallery)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegincreateGallery(string sessionId, string catalogId, gallery gallery, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("createGallery", new object[] {
                    sessionId,
                    catalogId,
                    gallery}, callback, asyncState);
    }
    
    /// <remarks/>
    public gallery EndcreateGallery(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((gallery)(results[0]));
    }
    
    /// <remarks/>
    public void createGalleryAsync(string sessionId, string catalogId, gallery gallery) {
        this.createGalleryAsync(sessionId, catalogId, gallery, null);
    }
    
    /// <remarks/>
    public void createGalleryAsync(string sessionId, string catalogId, gallery gallery, object userState) {
        if ((this.createGalleryOperationCompleted == null)) {
            this.createGalleryOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateGalleryOperationCompleted);
        }
        this.InvokeAsync("createGallery", new object[] {
                    sessionId,
                    catalogId,
                    gallery}, this.createGalleryOperationCompleted, userState);
    }
    
    private void OncreateGalleryOperationCompleted(object arg) {
        if ((this.createGalleryCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.createGalleryCompleted(this, new createGalleryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public watchFolder getWatchFolder([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string catalogId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string folderId) {
        object[] results = this.Invoke("getWatchFolder", new object[] {
                    sessionId,
                    catalogId,
                    folderId});
        return ((watchFolder)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetWatchFolder(string sessionId, string catalogId, string folderId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getWatchFolder", new object[] {
                    sessionId,
                    catalogId,
                    folderId}, callback, asyncState);
    }
    
    /// <remarks/>
    public watchFolder EndgetWatchFolder(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((watchFolder)(results[0]));
    }
    
    /// <remarks/>
    public void getWatchFolderAsync(string sessionId, string catalogId, string folderId) {
        this.getWatchFolderAsync(sessionId, catalogId, folderId, null);
    }
    
    /// <remarks/>
    public void getWatchFolderAsync(string sessionId, string catalogId, string folderId, object userState) {
        if ((this.getWatchFolderOperationCompleted == null)) {
            this.getWatchFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetWatchFolderOperationCompleted);
        }
        this.InvokeAsync("getWatchFolder", new object[] {
                    sessionId,
                    catalogId,
                    folderId}, this.getWatchFolderOperationCompleted, userState);
    }
    
    private void OngetWatchFolderOperationCompleted(object arg) {
        if ((this.getWatchFolderCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getWatchFolderCompleted(this, new getWatchFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public watchFolder addWatchFolder([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string catalogId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] watchFolder folder, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool createFolderOnDisk, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool combineChildFolders) {
        object[] results = this.Invoke("addWatchFolder", new object[] {
                    sessionId,
                    catalogId,
                    folder,
                    createFolderOnDisk,
                    combineChildFolders});
        return ((watchFolder)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddWatchFolder(string sessionId, string catalogId, watchFolder folder, bool createFolderOnDisk, bool combineChildFolders, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addWatchFolder", new object[] {
                    sessionId,
                    catalogId,
                    folder,
                    createFolderOnDisk,
                    combineChildFolders}, callback, asyncState);
    }
    
    /// <remarks/>
    public watchFolder EndaddWatchFolder(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((watchFolder)(results[0]));
    }
    
    /// <remarks/>
    public void addWatchFolderAsync(string sessionId, string catalogId, watchFolder folder, bool createFolderOnDisk, bool combineChildFolders) {
        this.addWatchFolderAsync(sessionId, catalogId, folder, createFolderOnDisk, combineChildFolders, null);
    }
    
    /// <remarks/>
    public void addWatchFolderAsync(string sessionId, string catalogId, watchFolder folder, bool createFolderOnDisk, bool combineChildFolders, object userState) {
        if ((this.addWatchFolderOperationCompleted == null)) {
            this.addWatchFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddWatchFolderOperationCompleted);
        }
        this.InvokeAsync("addWatchFolder", new object[] {
                    sessionId,
                    catalogId,
                    folder,
                    createFolderOnDisk,
                    combineChildFolders}, this.addWatchFolderOperationCompleted, userState);
    }
    
    private void OnaddWatchFolderOperationCompleted(object arg) {
        if ((this.addWatchFolderCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.addWatchFolderCompleted(this, new addWatchFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void updateWatchFolder([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string catalogId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] watchFolder folder) {
        this.Invoke("updateWatchFolder", new object[] {
                    sessionId,
                    catalogId,
                    folder});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginupdateWatchFolder(string sessionId, string catalogId, watchFolder folder, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("updateWatchFolder", new object[] {
                    sessionId,
                    catalogId,
                    folder}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndupdateWatchFolder(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void updateWatchFolderAsync(string sessionId, string catalogId, watchFolder folder) {
        this.updateWatchFolderAsync(sessionId, catalogId, folder, null);
    }
    
    /// <remarks/>
    public void updateWatchFolderAsync(string sessionId, string catalogId, watchFolder folder, object userState) {
        if ((this.updateWatchFolderOperationCompleted == null)) {
            this.updateWatchFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateWatchFolderOperationCompleted);
        }
        this.InvokeAsync("updateWatchFolder", new object[] {
                    sessionId,
                    catalogId,
                    folder}, this.updateWatchFolderOperationCompleted, userState);
    }
    
    private void OnupdateWatchFolderOperationCompleted(object arg) {
        if ((this.updateWatchFolderCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.updateWatchFolderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void removeWatchFolder([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string catalogId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string folderId) {
        this.Invoke("removeWatchFolder", new object[] {
                    sessionId,
                    catalogId,
                    folderId});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginremoveWatchFolder(string sessionId, string catalogId, string folderId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("removeWatchFolder", new object[] {
                    sessionId,
                    catalogId,
                    folderId}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndremoveWatchFolder(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void removeWatchFolderAsync(string sessionId, string catalogId, string folderId) {
        this.removeWatchFolderAsync(sessionId, catalogId, folderId, null);
    }
    
    /// <remarks/>
    public void removeWatchFolderAsync(string sessionId, string catalogId, string folderId, object userState) {
        if ((this.removeWatchFolderOperationCompleted == null)) {
            this.removeWatchFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveWatchFolderOperationCompleted);
        }
        this.InvokeAsync("removeWatchFolder", new object[] {
                    sessionId,
                    catalogId,
                    folderId}, this.removeWatchFolderOperationCompleted, userState);
    }
    
    private void OnremoveWatchFolderOperationCompleted(object arg) {
        if ((this.removeWatchFolderCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.removeWatchFolderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void createSubfolder([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string catalogId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string watchFolderId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string relativeSubfolderPath) {
        this.Invoke("createSubfolder", new object[] {
                    sessionId,
                    catalogId,
                    watchFolderId,
                    relativeSubfolderPath});
    }
    
    /// <remarks/>
    public System.IAsyncResult BegincreateSubfolder(string sessionId, string catalogId, string watchFolderId, string relativeSubfolderPath, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("createSubfolder", new object[] {
                    sessionId,
                    catalogId,
                    watchFolderId,
                    relativeSubfolderPath}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndcreateSubfolder(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void createSubfolderAsync(string sessionId, string catalogId, string watchFolderId, string relativeSubfolderPath) {
        this.createSubfolderAsync(sessionId, catalogId, watchFolderId, relativeSubfolderPath, null);
    }
    
    /// <remarks/>
    public void createSubfolderAsync(string sessionId, string catalogId, string watchFolderId, string relativeSubfolderPath, object userState) {
        if ((this.createSubfolderOperationCompleted == null)) {
            this.createSubfolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateSubfolderOperationCompleted);
        }
        this.InvokeAsync("createSubfolder", new object[] {
                    sessionId,
                    catalogId,
                    watchFolderId,
                    relativeSubfolderPath}, this.createSubfolderOperationCompleted, userState);
    }
    
    private void OncreateSubfolderOperationCompleted(object arg) {
        if ((this.createSubfolderCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.createSubfolderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void deleteGallery([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string catalogId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string galleryId) {
        this.Invoke("deleteGallery", new object[] {
                    sessionId,
                    catalogId,
                    galleryId});
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindeleteGallery(string sessionId, string catalogId, string galleryId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("deleteGallery", new object[] {
                    sessionId,
                    catalogId,
                    galleryId}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EnddeleteGallery(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void deleteGalleryAsync(string sessionId, string catalogId, string galleryId) {
        this.deleteGalleryAsync(sessionId, catalogId, galleryId, null);
    }
    
    /// <remarks/>
    public void deleteGalleryAsync(string sessionId, string catalogId, string galleryId, object userState) {
        if ((this.deleteGalleryOperationCompleted == null)) {
            this.deleteGalleryOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteGalleryOperationCompleted);
        }
        this.InvokeAsync("deleteGallery", new object[] {
                    sessionId,
                    catalogId,
                    galleryId}, this.deleteGalleryOperationCompleted, userState);
    }
    
    private void OndeleteGalleryOperationCompleted(object arg) {
        if ((this.deleteGalleryCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.deleteGalleryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void deleteSubfolder([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string catalogId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string watchFolderId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string relativePath) {
        this.Invoke("deleteSubfolder", new object[] {
                    sessionId,
                    catalogId,
                    watchFolderId,
                    relativePath});
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindeleteSubfolder(string sessionId, string catalogId, string watchFolderId, string relativePath, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("deleteSubfolder", new object[] {
                    sessionId,
                    catalogId,
                    watchFolderId,
                    relativePath}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EnddeleteSubfolder(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void deleteSubfolderAsync(string sessionId, string catalogId, string watchFolderId, string relativePath) {
        this.deleteSubfolderAsync(sessionId, catalogId, watchFolderId, relativePath, null);
    }
    
    /// <remarks/>
    public void deleteSubfolderAsync(string sessionId, string catalogId, string watchFolderId, string relativePath, object userState) {
        if ((this.deleteSubfolderOperationCompleted == null)) {
            this.deleteSubfolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteSubfolderOperationCompleted);
        }
        this.InvokeAsync("deleteSubfolder", new object[] {
                    sessionId,
                    catalogId,
                    watchFolderId,
                    relativePath}, this.deleteSubfolderOperationCompleted, userState);
    }
    
    private void OndeleteSubfolderOperationCompleted(object arg) {
        if ((this.deleteSubfolderCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.deleteSubfolderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string getAssetPreview([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string catalogId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int pageNumber, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string assetId) {
        object[] results = this.Invoke("getAssetPreview", new object[] {
                    sessionId,
                    catalogId,
                    pageNumber,
                    assetId});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetAssetPreview(string sessionId, string catalogId, int pageNumber, string assetId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getAssetPreview", new object[] {
                    sessionId,
                    catalogId,
                    pageNumber,
                    assetId}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndgetAssetPreview(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void getAssetPreviewAsync(string sessionId, string catalogId, int pageNumber, string assetId) {
        this.getAssetPreviewAsync(sessionId, catalogId, pageNumber, assetId, null);
    }
    
    /// <remarks/>
    public void getAssetPreviewAsync(string sessionId, string catalogId, int pageNumber, string assetId, object userState) {
        if ((this.getAssetPreviewOperationCompleted == null)) {
            this.getAssetPreviewOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAssetPreviewOperationCompleted);
        }
        this.InvokeAsync("getAssetPreview", new object[] {
                    sessionId,
                    catalogId,
                    pageNumber,
                    assetId}, this.getAssetPreviewOperationCompleted, userState);
    }
    
    private void OngetAssetPreviewOperationCompleted(object arg) {
        if ((this.getAssetPreviewCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getAssetPreviewCompleted(this, new getAssetPreviewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public assetQueryResults getAssets([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string catalogId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] assetQuery assets, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] assetQueryResultOptions resultOptions) {
        object[] results = this.Invoke("getAssets", new object[] {
                    sessionId,
                    catalogId,
                    assets,
                    resultOptions});
        return ((assetQueryResults)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetAssets(string sessionId, string catalogId, assetQuery assets, assetQueryResultOptions resultOptions, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getAssets", new object[] {
                    sessionId,
                    catalogId,
                    assets,
                    resultOptions}, callback, asyncState);
    }
    
    /// <remarks/>
    public assetQueryResults EndgetAssets(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((assetQueryResults)(results[0]));
    }
    
    /// <remarks/>
    public void getAssetsAsync(string sessionId, string catalogId, assetQuery assets, assetQueryResultOptions resultOptions) {
        this.getAssetsAsync(sessionId, catalogId, assets, resultOptions, null);
    }
    
    /// <remarks/>
    public void getAssetsAsync(string sessionId, string catalogId, assetQuery assets, assetQueryResultOptions resultOptions, object userState) {
        if ((this.getAssetsOperationCompleted == null)) {
            this.getAssetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAssetsOperationCompleted);
        }
        this.InvokeAsync("getAssets", new object[] {
                    sessionId,
                    catalogId,
                    assets,
                    resultOptions}, this.getAssetsOperationCompleted, userState);
    }
    
    private void OngetAssetsOperationCompleted(object arg) {
        if ((this.getAssetsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getAssetsCompleted(this, new getAssetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public string[] getAutomationScripts([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string catalogId) {
        object[] results = this.Invoke("getAutomationScripts", new object[] {
                    sessionId,
                    catalogId});
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetAutomationScripts(string sessionId, string catalogId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getAutomationScripts", new object[] {
                    sessionId,
                    catalogId}, callback, asyncState);
    }
    
    /// <remarks/>
    public string[] EndgetAutomationScripts(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public void getAutomationScriptsAsync(string sessionId, string catalogId) {
        this.getAutomationScriptsAsync(sessionId, catalogId, null);
    }
    
    /// <remarks/>
    public void getAutomationScriptsAsync(string sessionId, string catalogId, object userState) {
        if ((this.getAutomationScriptsOperationCompleted == null)) {
            this.getAutomationScriptsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAutomationScriptsOperationCompleted);
        }
        this.InvokeAsync("getAutomationScripts", new object[] {
                    sessionId,
                    catalogId}, this.getAutomationScriptsOperationCompleted, userState);
    }
    
    private void OngetAutomationScriptsOperationCompleted(object arg) {
        if ((this.getAutomationScriptsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getAutomationScriptsCompleted(this, new getAutomationScriptsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public catalogPermissions[] getCatalogPermissions([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId) {
        object[] results = this.Invoke("getCatalogPermissions", new object[] {
                    sessionId});
        return ((catalogPermissions[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetCatalogPermissions(string sessionId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getCatalogPermissions", new object[] {
                    sessionId}, callback, asyncState);
    }
    
    /// <remarks/>
    public catalogPermissions[] EndgetCatalogPermissions(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((catalogPermissions[])(results[0]));
    }
    
    /// <remarks/>
    public void getCatalogPermissionsAsync(string sessionId) {
        this.getCatalogPermissionsAsync(sessionId, null);
    }
    
    /// <remarks/>
    public void getCatalogPermissionsAsync(string sessionId, object userState) {
        if ((this.getCatalogPermissionsOperationCompleted == null)) {
            this.getCatalogPermissionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCatalogPermissionsOperationCompleted);
        }
        this.InvokeAsync("getCatalogPermissions", new object[] {
                    sessionId}, this.getCatalogPermissionsOperationCompleted, userState);
    }
    
    private void OngetCatalogPermissionsOperationCompleted(object arg) {
        if ((this.getCatalogPermissionsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getCatalogPermissionsCompleted(this, new getCatalogPermissionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public catalog[] getCatalogs([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId) {
        object[] results = this.Invoke("getCatalogs", new object[] {
                    sessionId});
        return ((catalog[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetCatalogs(string sessionId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getCatalogs", new object[] {
                    sessionId}, callback, asyncState);
    }
    
    /// <remarks/>
    public catalog[] EndgetCatalogs(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((catalog[])(results[0]));
    }
    
    /// <remarks/>
    public void getCatalogsAsync(string sessionId) {
        this.getCatalogsAsync(sessionId, null);
    }
    
    /// <remarks/>
    public void getCatalogsAsync(string sessionId, object userState) {
        if ((this.getCatalogsOperationCompleted == null)) {
            this.getCatalogsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCatalogsOperationCompleted);
        }
        this.InvokeAsync("getCatalogs", new object[] {
                    sessionId}, this.getCatalogsOperationCompleted, userState);
    }
    
    private void OngetCatalogsOperationCompleted(object arg) {
        if ((this.getCatalogsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getCatalogsCompleted(this, new getCatalogsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public attribute[] getDetailsForWatchFolder([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string catalogId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string watchFolderId) {
        object[] results = this.Invoke("getDetailsForWatchFolder", new object[] {
                    sessionId,
                    catalogId,
                    watchFolderId});
        return ((attribute[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetDetailsForWatchFolder(string sessionId, string catalogId, string watchFolderId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getDetailsForWatchFolder", new object[] {
                    sessionId,
                    catalogId,
                    watchFolderId}, callback, asyncState);
    }
    
    /// <remarks/>
    public attribute[] EndgetDetailsForWatchFolder(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((attribute[])(results[0]));
    }
    
    /// <remarks/>
    public void getDetailsForWatchFolderAsync(string sessionId, string catalogId, string watchFolderId) {
        this.getDetailsForWatchFolderAsync(sessionId, catalogId, watchFolderId, null);
    }
    
    /// <remarks/>
    public void getDetailsForWatchFolderAsync(string sessionId, string catalogId, string watchFolderId, object userState) {
        if ((this.getDetailsForWatchFolderOperationCompleted == null)) {
            this.getDetailsForWatchFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDetailsForWatchFolderOperationCompleted);
        }
        this.InvokeAsync("getDetailsForWatchFolder", new object[] {
                    sessionId,
                    catalogId,
                    watchFolderId}, this.getDetailsForWatchFolderOperationCompleted, userState);
    }
    
    private void OngetDetailsForWatchFolderOperationCompleted(object arg) {
        if ((this.getDetailsForWatchFolderCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getDetailsForWatchFolderCompleted(this, new getDetailsForWatchFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public attribute[] getErrorDetailsForJob([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string jobId) {
        object[] results = this.Invoke("getErrorDetailsForJob", new object[] {
                    sessionId,
                    jobId});
        return ((attribute[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetErrorDetailsForJob(string sessionId, string jobId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getErrorDetailsForJob", new object[] {
                    sessionId,
                    jobId}, callback, asyncState);
    }
    
    /// <remarks/>
    public attribute[] EndgetErrorDetailsForJob(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((attribute[])(results[0]));
    }
    
    /// <remarks/>
    public void getErrorDetailsForJobAsync(string sessionId, string jobId) {
        this.getErrorDetailsForJobAsync(sessionId, jobId, null);
    }
    
    /// <remarks/>
    public void getErrorDetailsForJobAsync(string sessionId, string jobId, object userState) {
        if ((this.getErrorDetailsForJobOperationCompleted == null)) {
            this.getErrorDetailsForJobOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetErrorDetailsForJobOperationCompleted);
        }
        this.InvokeAsync("getErrorDetailsForJob", new object[] {
                    sessionId,
                    jobId}, this.getErrorDetailsForJobOperationCompleted, userState);
    }
    
    private void OngetErrorDetailsForJobOperationCompleted(object arg) {
        if ((this.getErrorDetailsForJobCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getErrorDetailsForJobCompleted(this, new getErrorDetailsForJobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public fieldDefinition[] getFieldDefinitions([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string catalogId, [System.Xml.Serialization.XmlElementAttribute("fieldNames", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string[] fieldNames, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool getPredefinedValues, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool getPredefinedValuesSpecified) {
        object[] results = this.Invoke("getFieldDefinitions", new object[] {
                    sessionId,
                    catalogId,
                    fieldNames,
                    getPredefinedValues,
                    getPredefinedValuesSpecified});
        return ((fieldDefinition[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetFieldDefinitions(string sessionId, string catalogId, string[] fieldNames, bool getPredefinedValues, bool getPredefinedValuesSpecified, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getFieldDefinitions", new object[] {
                    sessionId,
                    catalogId,
                    fieldNames,
                    getPredefinedValues,
                    getPredefinedValuesSpecified}, callback, asyncState);
    }
    
    /// <remarks/>
    public fieldDefinition[] EndgetFieldDefinitions(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((fieldDefinition[])(results[0]));
    }
    
    /// <remarks/>
    public void getFieldDefinitionsAsync(string sessionId, string catalogId, string[] fieldNames, bool getPredefinedValues, bool getPredefinedValuesSpecified) {
        this.getFieldDefinitionsAsync(sessionId, catalogId, fieldNames, getPredefinedValues, getPredefinedValuesSpecified, null);
    }
    
    /// <remarks/>
    public void getFieldDefinitionsAsync(string sessionId, string catalogId, string[] fieldNames, bool getPredefinedValues, bool getPredefinedValuesSpecified, object userState) {
        if ((this.getFieldDefinitionsOperationCompleted == null)) {
            this.getFieldDefinitionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFieldDefinitionsOperationCompleted);
        }
        this.InvokeAsync("getFieldDefinitions", new object[] {
                    sessionId,
                    catalogId,
                    fieldNames,
                    getPredefinedValues,
                    getPredefinedValuesSpecified}, this.getFieldDefinitionsOperationCompleted, userState);
    }
    
    private void OngetFieldDefinitionsOperationCompleted(object arg) {
        if ((this.getFieldDefinitionsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getFieldDefinitionsCompleted(this, new getFieldDefinitionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void addOrRemovePredefinedValues([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string catalogId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] fieldDefinition fieldDefinition, [System.Xml.Serialization.XmlElementAttribute("addPredefinedValues", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] addPredefinedValues, [System.Xml.Serialization.XmlElementAttribute("removePredefinedValues", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] removePredefinedValues) {
        this.Invoke("addOrRemovePredefinedValues", new object[] {
                    sessionId,
                    catalogId,
                    fieldDefinition,
                    addPredefinedValues,
                    removePredefinedValues});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddOrRemovePredefinedValues(string sessionId, string catalogId, fieldDefinition fieldDefinition, string[] addPredefinedValues, string[] removePredefinedValues, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addOrRemovePredefinedValues", new object[] {
                    sessionId,
                    catalogId,
                    fieldDefinition,
                    addPredefinedValues,
                    removePredefinedValues}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndaddOrRemovePredefinedValues(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void addOrRemovePredefinedValuesAsync(string sessionId, string catalogId, fieldDefinition fieldDefinition, string[] addPredefinedValues, string[] removePredefinedValues) {
        this.addOrRemovePredefinedValuesAsync(sessionId, catalogId, fieldDefinition, addPredefinedValues, removePredefinedValues, null);
    }
    
    /// <remarks/>
    public void addOrRemovePredefinedValuesAsync(string sessionId, string catalogId, fieldDefinition fieldDefinition, string[] addPredefinedValues, string[] removePredefinedValues, object userState) {
        if ((this.addOrRemovePredefinedValuesOperationCompleted == null)) {
            this.addOrRemovePredefinedValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddOrRemovePredefinedValuesOperationCompleted);
        }
        this.InvokeAsync("addOrRemovePredefinedValues", new object[] {
                    sessionId,
                    catalogId,
                    fieldDefinition,
                    addPredefinedValues,
                    removePredefinedValues}, this.addOrRemovePredefinedValuesOperationCompleted, userState);
    }
    
    private void OnaddOrRemovePredefinedValuesOperationCompleted(object arg) {
        if ((this.addOrRemovePredefinedValuesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.addOrRemovePredefinedValuesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void setPredefinedValues([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string catalogId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] fieldDefinition fieldDefinition, [System.Xml.Serialization.XmlElementAttribute("predefinedValues", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] predefinedValues) {
        this.Invoke("setPredefinedValues", new object[] {
                    sessionId,
                    catalogId,
                    fieldDefinition,
                    predefinedValues});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginsetPredefinedValues(string sessionId, string catalogId, fieldDefinition fieldDefinition, string[] predefinedValues, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("setPredefinedValues", new object[] {
                    sessionId,
                    catalogId,
                    fieldDefinition,
                    predefinedValues}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndsetPredefinedValues(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void setPredefinedValuesAsync(string sessionId, string catalogId, fieldDefinition fieldDefinition, string[] predefinedValues) {
        this.setPredefinedValuesAsync(sessionId, catalogId, fieldDefinition, predefinedValues, null);
    }
    
    /// <remarks/>
    public void setPredefinedValuesAsync(string sessionId, string catalogId, fieldDefinition fieldDefinition, string[] predefinedValues, object userState) {
        if ((this.setPredefinedValuesOperationCompleted == null)) {
            this.setPredefinedValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetPredefinedValuesOperationCompleted);
        }
        this.InvokeAsync("setPredefinedValues", new object[] {
                    sessionId,
                    catalogId,
                    fieldDefinition,
                    predefinedValues}, this.setPredefinedValuesOperationCompleted, userState);
    }
    
    private void OnsetPredefinedValuesOperationCompleted(object arg) {
        if ((this.setPredefinedValuesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.setPredefinedValuesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public nestedValue[] addNestedPredefinedValues([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string catalogId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string fieldDefinitionId, [System.Xml.Serialization.XmlElementAttribute("newValueList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] nestedValue[] newValueList, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string parentId) {
        object[] results = this.Invoke("addNestedPredefinedValues", new object[] {
                    sessionId,
                    catalogId,
                    fieldDefinitionId,
                    newValueList,
                    parentId});
        return ((nestedValue[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddNestedPredefinedValues(string sessionId, string catalogId, string fieldDefinitionId, nestedValue[] newValueList, string parentId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addNestedPredefinedValues", new object[] {
                    sessionId,
                    catalogId,
                    fieldDefinitionId,
                    newValueList,
                    parentId}, callback, asyncState);
    }
    
    /// <remarks/>
    public nestedValue[] EndaddNestedPredefinedValues(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((nestedValue[])(results[0]));
    }
    
    /// <remarks/>
    public void addNestedPredefinedValuesAsync(string sessionId, string catalogId, string fieldDefinitionId, nestedValue[] newValueList, string parentId) {
        this.addNestedPredefinedValuesAsync(sessionId, catalogId, fieldDefinitionId, newValueList, parentId, null);
    }
    
    /// <remarks/>
    public void addNestedPredefinedValuesAsync(string sessionId, string catalogId, string fieldDefinitionId, nestedValue[] newValueList, string parentId, object userState) {
        if ((this.addNestedPredefinedValuesOperationCompleted == null)) {
            this.addNestedPredefinedValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddNestedPredefinedValuesOperationCompleted);
        }
        this.InvokeAsync("addNestedPredefinedValues", new object[] {
                    sessionId,
                    catalogId,
                    fieldDefinitionId,
                    newValueList,
                    parentId}, this.addNestedPredefinedValuesOperationCompleted, userState);
    }
    
    private void OnaddNestedPredefinedValuesOperationCompleted(object arg) {
        if ((this.addNestedPredefinedValuesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.addNestedPredefinedValuesCompleted(this, new addNestedPredefinedValuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void changeNestedPredefinedValue([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string catalogId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string fieldDefinitionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string nestedValueId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string newValue) {
        this.Invoke("changeNestedPredefinedValue", new object[] {
                    sessionId,
                    catalogId,
                    fieldDefinitionId,
                    nestedValueId,
                    newValue});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginchangeNestedPredefinedValue(string sessionId, string catalogId, string fieldDefinitionId, string nestedValueId, string newValue, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("changeNestedPredefinedValue", new object[] {
                    sessionId,
                    catalogId,
                    fieldDefinitionId,
                    nestedValueId,
                    newValue}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndchangeNestedPredefinedValue(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void changeNestedPredefinedValueAsync(string sessionId, string catalogId, string fieldDefinitionId, string nestedValueId, string newValue) {
        this.changeNestedPredefinedValueAsync(sessionId, catalogId, fieldDefinitionId, nestedValueId, newValue, null);
    }
    
    /// <remarks/>
    public void changeNestedPredefinedValueAsync(string sessionId, string catalogId, string fieldDefinitionId, string nestedValueId, string newValue, object userState) {
        if ((this.changeNestedPredefinedValueOperationCompleted == null)) {
            this.changeNestedPredefinedValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchangeNestedPredefinedValueOperationCompleted);
        }
        this.InvokeAsync("changeNestedPredefinedValue", new object[] {
                    sessionId,
                    catalogId,
                    fieldDefinitionId,
                    nestedValueId,
                    newValue}, this.changeNestedPredefinedValueOperationCompleted, userState);
    }
    
    private void OnchangeNestedPredefinedValueOperationCompleted(object arg) {
        if ((this.changeNestedPredefinedValueCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.changeNestedPredefinedValueCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void moveNestedPredefinedValue([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string catalogId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string fieldDefinitionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string nestedValueId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string newParentId) {
        this.Invoke("moveNestedPredefinedValue", new object[] {
                    sessionId,
                    catalogId,
                    fieldDefinitionId,
                    nestedValueId,
                    newParentId});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginmoveNestedPredefinedValue(string sessionId, string catalogId, string fieldDefinitionId, string nestedValueId, string newParentId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("moveNestedPredefinedValue", new object[] {
                    sessionId,
                    catalogId,
                    fieldDefinitionId,
                    nestedValueId,
                    newParentId}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndmoveNestedPredefinedValue(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void moveNestedPredefinedValueAsync(string sessionId, string catalogId, string fieldDefinitionId, string nestedValueId, string newParentId) {
        this.moveNestedPredefinedValueAsync(sessionId, catalogId, fieldDefinitionId, nestedValueId, newParentId, null);
    }
    
    /// <remarks/>
    public void moveNestedPredefinedValueAsync(string sessionId, string catalogId, string fieldDefinitionId, string nestedValueId, string newParentId, object userState) {
        if ((this.moveNestedPredefinedValueOperationCompleted == null)) {
            this.moveNestedPredefinedValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmoveNestedPredefinedValueOperationCompleted);
        }
        this.InvokeAsync("moveNestedPredefinedValue", new object[] {
                    sessionId,
                    catalogId,
                    fieldDefinitionId,
                    nestedValueId,
                    newParentId}, this.moveNestedPredefinedValueOperationCompleted, userState);
    }
    
    private void OnmoveNestedPredefinedValueOperationCompleted(object arg) {
        if ((this.moveNestedPredefinedValueCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.moveNestedPredefinedValueCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void deleteNestedPredefinedValues([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string catalogId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string fieldDefinitionId, [System.Xml.Serialization.XmlElementAttribute("nestedValueIds", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] nestedValueIds) {
        this.Invoke("deleteNestedPredefinedValues", new object[] {
                    sessionId,
                    catalogId,
                    fieldDefinitionId,
                    nestedValueIds});
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindeleteNestedPredefinedValues(string sessionId, string catalogId, string fieldDefinitionId, string[] nestedValueIds, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("deleteNestedPredefinedValues", new object[] {
                    sessionId,
                    catalogId,
                    fieldDefinitionId,
                    nestedValueIds}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EnddeleteNestedPredefinedValues(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void deleteNestedPredefinedValuesAsync(string sessionId, string catalogId, string fieldDefinitionId, string[] nestedValueIds) {
        this.deleteNestedPredefinedValuesAsync(sessionId, catalogId, fieldDefinitionId, nestedValueIds, null);
    }
    
    /// <remarks/>
    public void deleteNestedPredefinedValuesAsync(string sessionId, string catalogId, string fieldDefinitionId, string[] nestedValueIds, object userState) {
        if ((this.deleteNestedPredefinedValuesOperationCompleted == null)) {
            this.deleteNestedPredefinedValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteNestedPredefinedValuesOperationCompleted);
        }
        this.InvokeAsync("deleteNestedPredefinedValues", new object[] {
                    sessionId,
                    catalogId,
                    fieldDefinitionId,
                    nestedValueIds}, this.deleteNestedPredefinedValuesOperationCompleted, userState);
    }
    
    private void OndeleteNestedPredefinedValuesOperationCompleted(object arg) {
        if ((this.deleteNestedPredefinedValuesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.deleteNestedPredefinedValuesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public folder getFolderTreeForWatchFolder([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string catalogId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string watchFolderId) {
        object[] results = this.Invoke("getFolderTreeForWatchFolder", new object[] {
                    sessionId,
                    catalogId,
                    watchFolderId});
        return ((folder)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetFolderTreeForWatchFolder(string sessionId, string catalogId, string watchFolderId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getFolderTreeForWatchFolder", new object[] {
                    sessionId,
                    catalogId,
                    watchFolderId}, callback, asyncState);
    }
    
    /// <remarks/>
    public folder EndgetFolderTreeForWatchFolder(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((folder)(results[0]));
    }
    
    /// <remarks/>
    public void getFolderTreeForWatchFolderAsync(string sessionId, string catalogId, string watchFolderId) {
        this.getFolderTreeForWatchFolderAsync(sessionId, catalogId, watchFolderId, null);
    }
    
    /// <remarks/>
    public void getFolderTreeForWatchFolderAsync(string sessionId, string catalogId, string watchFolderId, object userState) {
        if ((this.getFolderTreeForWatchFolderOperationCompleted == null)) {
            this.getFolderTreeForWatchFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFolderTreeForWatchFolderOperationCompleted);
        }
        this.InvokeAsync("getFolderTreeForWatchFolder", new object[] {
                    sessionId,
                    catalogId,
                    watchFolderId}, this.getFolderTreeForWatchFolderOperationCompleted, userState);
    }
    
    private void OngetFolderTreeForWatchFolderOperationCompleted(object arg) {
        if ((this.getFolderTreeForWatchFolderCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getFolderTreeForWatchFolderCompleted(this, new getFolderTreeForWatchFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public gallery[] getGalleries([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string catalogId) {
        object[] results = this.Invoke("getGalleries", new object[] {
                    sessionId,
                    catalogId});
        return ((gallery[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetGalleries(string sessionId, string catalogId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getGalleries", new object[] {
                    sessionId,
                    catalogId}, callback, asyncState);
    }
    
    /// <remarks/>
    public gallery[] EndgetGalleries(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((gallery[])(results[0]));
    }
    
    /// <remarks/>
    public void getGalleriesAsync(string sessionId, string catalogId) {
        this.getGalleriesAsync(sessionId, catalogId, null);
    }
    
    /// <remarks/>
    public void getGalleriesAsync(string sessionId, string catalogId, object userState) {
        if ((this.getGalleriesOperationCompleted == null)) {
            this.getGalleriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetGalleriesOperationCompleted);
        }
        this.InvokeAsync("getGalleries", new object[] {
                    sessionId,
                    catalogId}, this.getGalleriesOperationCompleted, userState);
    }
    
    private void OngetGalleriesOperationCompleted(object arg) {
        if ((this.getGalleriesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getGalleriesCompleted(this, new getGalleriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public string[] getJobIDs([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId) {
        object[] results = this.Invoke("getJobIDs", new object[] {
                    sessionId});
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetJobIDs(string sessionId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getJobIDs", new object[] {
                    sessionId}, callback, asyncState);
    }
    
    /// <remarks/>
    public string[] EndgetJobIDs(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public void getJobIDsAsync(string sessionId) {
        this.getJobIDsAsync(sessionId, null);
    }
    
    /// <remarks/>
    public void getJobIDsAsync(string sessionId, object userState) {
        if ((this.getJobIDsOperationCompleted == null)) {
            this.getJobIDsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetJobIDsOperationCompleted);
        }
        this.InvokeAsync("getJobIDs", new object[] {
                    sessionId}, this.getJobIDsOperationCompleted, userState);
    }
    
    private void OngetJobIDsOperationCompleted(object arg) {
        if ((this.getJobIDsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getJobIDsCompleted(this, new getJobIDsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public keySpecification getRSAPublicEncryptionKey() {
        object[] results = this.Invoke("getRSAPublicEncryptionKey", new object[0]);
        return ((keySpecification)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetRSAPublicEncryptionKey(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getRSAPublicEncryptionKey", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public keySpecification EndgetRSAPublicEncryptionKey(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((keySpecification)(results[0]));
    }
    
    /// <remarks/>
    public void getRSAPublicEncryptionKeyAsync() {
        this.getRSAPublicEncryptionKeyAsync(null);
    }
    
    /// <remarks/>
    public void getRSAPublicEncryptionKeyAsync(object userState) {
        if ((this.getRSAPublicEncryptionKeyOperationCompleted == null)) {
            this.getRSAPublicEncryptionKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRSAPublicEncryptionKeyOperationCompleted);
        }
        this.InvokeAsync("getRSAPublicEncryptionKey", new object[0], this.getRSAPublicEncryptionKeyOperationCompleted, userState);
    }
    
    private void OngetRSAPublicEncryptionKeyOperationCompleted(object arg) {
        if ((this.getRSAPublicEncryptionKeyCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getRSAPublicEncryptionKeyCompleted(this, new getRSAPublicEncryptionKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public string[] getServerFeatures([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId) {
        object[] results = this.Invoke("getServerFeatures", new object[] {
                    sessionId});
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetServerFeatures(string sessionId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getServerFeatures", new object[] {
                    sessionId}, callback, asyncState);
    }
    
    /// <remarks/>
    public string[] EndgetServerFeatures(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public void getServerFeaturesAsync(string sessionId) {
        this.getServerFeaturesAsync(sessionId, null);
    }
    
    /// <remarks/>
    public void getServerFeaturesAsync(string sessionId, object userState) {
        if ((this.getServerFeaturesOperationCompleted == null)) {
            this.getServerFeaturesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetServerFeaturesOperationCompleted);
        }
        this.InvokeAsync("getServerFeatures", new object[] {
                    sessionId}, this.getServerFeaturesOperationCompleted, userState);
    }
    
    private void OngetServerFeaturesOperationCompleted(object arg) {
        if ((this.getServerFeaturesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getServerFeaturesCompleted(this, new getServerFeaturesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public attribute[] getServerSystemInformation([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId) {
        object[] results = this.Invoke("getServerSystemInformation", new object[] {
                    sessionId});
        return ((attribute[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetServerSystemInformation(string sessionId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getServerSystemInformation", new object[] {
                    sessionId}, callback, asyncState);
    }
    
    /// <remarks/>
    public attribute[] EndgetServerSystemInformation(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((attribute[])(results[0]));
    }
    
    /// <remarks/>
    public void getServerSystemInformationAsync(string sessionId) {
        this.getServerSystemInformationAsync(sessionId, null);
    }
    
    /// <remarks/>
    public void getServerSystemInformationAsync(string sessionId, object userState) {
        if ((this.getServerSystemInformationOperationCompleted == null)) {
            this.getServerSystemInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetServerSystemInformationOperationCompleted);
        }
        this.InvokeAsync("getServerSystemInformation", new object[] {
                    sessionId}, this.getServerSystemInformationOperationCompleted, userState);
    }
    
    private void OngetServerSystemInformationOperationCompleted(object arg) {
        if ((this.getServerSystemInformationCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getServerSystemInformationCompleted(this, new getServerSystemInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public jobStatus[] getStatusForJobs([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute("jobIds", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string[] jobIds) {
        object[] results = this.Invoke("getStatusForJobs", new object[] {
                    sessionId,
                    jobIds});
        return ((jobStatus[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetStatusForJobs(string sessionId, string[] jobIds, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getStatusForJobs", new object[] {
                    sessionId,
                    jobIds}, callback, asyncState);
    }
    
    /// <remarks/>
    public jobStatus[] EndgetStatusForJobs(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((jobStatus[])(results[0]));
    }
    
    /// <remarks/>
    public void getStatusForJobsAsync(string sessionId, string[] jobIds) {
        this.getStatusForJobsAsync(sessionId, jobIds, null);
    }
    
    /// <remarks/>
    public void getStatusForJobsAsync(string sessionId, string[] jobIds, object userState) {
        if ((this.getStatusForJobsOperationCompleted == null)) {
            this.getStatusForJobsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStatusForJobsOperationCompleted);
        }
        this.InvokeAsync("getStatusForJobs", new object[] {
                    sessionId,
                    jobIds}, this.getStatusForJobsOperationCompleted, userState);
    }
    
    private void OngetStatusForJobsOperationCompleted(object arg) {
        if ((this.getStatusForJobsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getStatusForJobsCompleted(this, new getStatusForJobsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public watchFolder[] getWatchFolders([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string catalogId) {
        object[] results = this.Invoke("getWatchFolders", new object[] {
                    sessionId,
                    catalogId});
        return ((watchFolder[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetWatchFolders(string sessionId, string catalogId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getWatchFolders", new object[] {
                    sessionId,
                    catalogId}, callback, asyncState);
    }
    
    /// <remarks/>
    public watchFolder[] EndgetWatchFolders(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((watchFolder[])(results[0]));
    }
    
    /// <remarks/>
    public void getWatchFoldersAsync(string sessionId, string catalogId) {
        this.getWatchFoldersAsync(sessionId, catalogId, null);
    }
    
    /// <remarks/>
    public void getWatchFoldersAsync(string sessionId, string catalogId, object userState) {
        if ((this.getWatchFoldersOperationCompleted == null)) {
            this.getWatchFoldersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetWatchFoldersOperationCompleted);
        }
        this.InvokeAsync("getWatchFolders", new object[] {
                    sessionId,
                    catalogId}, this.getWatchFoldersOperationCompleted, userState);
    }
    
    private void OngetWatchFoldersOperationCompleted(object arg) {
        if ((this.getWatchFoldersCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getWatchFoldersCompleted(this, new getWatchFoldersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string login([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string encryptedPassword) {
        object[] results = this.Invoke("login", new object[] {
                    userName,
                    encryptedPassword});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult Beginlogin(string userName, string encryptedPassword, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("login", new object[] {
                    userName,
                    encryptedPassword}, callback, asyncState);
    }
    
    /// <remarks/>
    public string Endlogin(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void loginAsync(string userName, string encryptedPassword) {
        this.loginAsync(userName, encryptedPassword, null);
    }
    
    /// <remarks/>
    public void loginAsync(string userName, string encryptedPassword, object userState) {
        if ((this.loginOperationCompleted == null)) {
            this.loginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginOperationCompleted);
        }
        this.InvokeAsync("login", new object[] {
                    userName,
                    encryptedPassword}, this.loginOperationCompleted, userState);
    }
    
    private void OnloginOperationCompleted(object arg) {
        if ((this.loginCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.loginCompleted(this, new loginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void logout([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId) {
        this.Invoke("logout", new object[] {
                    sessionId});
    }
    
    /// <remarks/>
    public System.IAsyncResult Beginlogout(string sessionId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("logout", new object[] {
                    sessionId}, callback, asyncState);
    }
    
    /// <remarks/>
    public void Endlogout(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void logoutAsync(string sessionId) {
        this.logoutAsync(sessionId, null);
    }
    
    /// <remarks/>
    public void logoutAsync(string sessionId, object userState) {
        if ((this.logoutOperationCompleted == null)) {
            this.logoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlogoutOperationCompleted);
        }
        this.InvokeAsync("logout", new object[] {
                    sessionId}, this.logoutOperationCompleted, userState);
    }
    
    private void OnlogoutOperationCompleted(object arg) {
        if ((this.logoutCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.logoutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void moveSubfolder([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string catalogId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sourceWatchFolderId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sourceRelativeFolderPath, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string destinationWatchFolderId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string destinationRelativeFolderPath) {
        this.Invoke("moveSubfolder", new object[] {
                    sessionId,
                    catalogId,
                    sourceWatchFolderId,
                    sourceRelativeFolderPath,
                    destinationWatchFolderId,
                    destinationRelativeFolderPath});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginmoveSubfolder(string sessionId, string catalogId, string sourceWatchFolderId, string sourceRelativeFolderPath, string destinationWatchFolderId, string destinationRelativeFolderPath, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("moveSubfolder", new object[] {
                    sessionId,
                    catalogId,
                    sourceWatchFolderId,
                    sourceRelativeFolderPath,
                    destinationWatchFolderId,
                    destinationRelativeFolderPath}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndmoveSubfolder(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void moveSubfolderAsync(string sessionId, string catalogId, string sourceWatchFolderId, string sourceRelativeFolderPath, string destinationWatchFolderId, string destinationRelativeFolderPath) {
        this.moveSubfolderAsync(sessionId, catalogId, sourceWatchFolderId, sourceRelativeFolderPath, destinationWatchFolderId, destinationRelativeFolderPath, null);
    }
    
    /// <remarks/>
    public void moveSubfolderAsync(string sessionId, string catalogId, string sourceWatchFolderId, string sourceRelativeFolderPath, string destinationWatchFolderId, string destinationRelativeFolderPath, object userState) {
        if ((this.moveSubfolderOperationCompleted == null)) {
            this.moveSubfolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmoveSubfolderOperationCompleted);
        }
        this.InvokeAsync("moveSubfolder", new object[] {
                    sessionId,
                    catalogId,
                    sourceWatchFolderId,
                    sourceRelativeFolderPath,
                    destinationWatchFolderId,
                    destinationRelativeFolderPath}, this.moveSubfolderOperationCompleted, userState);
    }
    
    private void OnmoveSubfolderOperationCompleted(object arg) {
        if ((this.moveSubfolderCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.moveSubfolderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void removeAssetsFromCatalog([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string catalogId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] assetQuery assets, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool deleteOriginalFromDisk) {
        this.Invoke("removeAssetsFromCatalog", new object[] {
                    sessionId,
                    catalogId,
                    assets,
                    deleteOriginalFromDisk});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginremoveAssetsFromCatalog(string sessionId, string catalogId, assetQuery assets, bool deleteOriginalFromDisk, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("removeAssetsFromCatalog", new object[] {
                    sessionId,
                    catalogId,
                    assets,
                    deleteOriginalFromDisk}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndremoveAssetsFromCatalog(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void removeAssetsFromCatalogAsync(string sessionId, string catalogId, assetQuery assets, bool deleteOriginalFromDisk) {
        this.removeAssetsFromCatalogAsync(sessionId, catalogId, assets, deleteOriginalFromDisk, null);
    }
    
    /// <remarks/>
    public void removeAssetsFromCatalogAsync(string sessionId, string catalogId, assetQuery assets, bool deleteOriginalFromDisk, object userState) {
        if ((this.removeAssetsFromCatalogOperationCompleted == null)) {
            this.removeAssetsFromCatalogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveAssetsFromCatalogOperationCompleted);
        }
        this.InvokeAsync("removeAssetsFromCatalog", new object[] {
                    sessionId,
                    catalogId,
                    assets,
                    deleteOriginalFromDisk}, this.removeAssetsFromCatalogOperationCompleted, userState);
    }
    
    private void OnremoveAssetsFromCatalogOperationCompleted(object arg) {
        if ((this.removeAssetsFromCatalogCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.removeAssetsFromCatalogCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void removeItemsFromGallery([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string catalogId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string galleryId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] assetQuery assets) {
        this.Invoke("removeItemsFromGallery", new object[] {
                    sessionId,
                    catalogId,
                    galleryId,
                    assets});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginremoveItemsFromGallery(string sessionId, string catalogId, string galleryId, assetQuery assets, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("removeItemsFromGallery", new object[] {
                    sessionId,
                    catalogId,
                    galleryId,
                    assets}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndremoveItemsFromGallery(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void removeItemsFromGalleryAsync(string sessionId, string catalogId, string galleryId, assetQuery assets) {
        this.removeItemsFromGalleryAsync(sessionId, catalogId, galleryId, assets, null);
    }
    
    /// <remarks/>
    public void removeItemsFromGalleryAsync(string sessionId, string catalogId, string galleryId, assetQuery assets, object userState) {
        if ((this.removeItemsFromGalleryOperationCompleted == null)) {
            this.removeItemsFromGalleryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveItemsFromGalleryOperationCompleted);
        }
        this.InvokeAsync("removeItemsFromGallery", new object[] {
                    sessionId,
                    catalogId,
                    galleryId,
                    assets}, this.removeItemsFromGalleryOperationCompleted, userState);
    }
    
    private void OnremoveItemsFromGalleryOperationCompleted(object arg) {
        if ((this.removeItemsFromGalleryCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.removeItemsFromGalleryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string runJob([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string catalogId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] assetQuery assets, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] job job) {
        object[] results = this.Invoke("runJob", new object[] {
                    sessionId,
                    catalogId,
                    assets,
                    job});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginrunJob(string sessionId, string catalogId, assetQuery assets, job job, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("runJob", new object[] {
                    sessionId,
                    catalogId,
                    assets,
                    job}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndrunJob(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void runJobAsync(string sessionId, string catalogId, assetQuery assets, job job) {
        this.runJobAsync(sessionId, catalogId, assets, job, null);
    }
    
    /// <remarks/>
    public void runJobAsync(string sessionId, string catalogId, assetQuery assets, job job, object userState) {
        if ((this.runJobOperationCompleted == null)) {
            this.runJobOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrunJobOperationCompleted);
        }
        this.InvokeAsync("runJob", new object[] {
                    sessionId,
                    catalogId,
                    assets,
                    job}, this.runJobOperationCompleted, userState);
    }
    
    private void OnrunJobOperationCompleted(object arg) {
        if ((this.runJobCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.runJobCompleted(this, new runJobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public catalogingOptions getCatalogingOptions([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string catalogId) {
        object[] results = this.Invoke("getCatalogingOptions", new object[] {
                    sessionId,
                    catalogId});
        return ((catalogingOptions)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetCatalogingOptions(string sessionId, string catalogId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getCatalogingOptions", new object[] {
                    sessionId,
                    catalogId}, callback, asyncState);
    }
    
    /// <remarks/>
    public catalogingOptions EndgetCatalogingOptions(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((catalogingOptions)(results[0]));
    }
    
    /// <remarks/>
    public void getCatalogingOptionsAsync(string sessionId, string catalogId) {
        this.getCatalogingOptionsAsync(sessionId, catalogId, null);
    }
    
    /// <remarks/>
    public void getCatalogingOptionsAsync(string sessionId, string catalogId, object userState) {
        if ((this.getCatalogingOptionsOperationCompleted == null)) {
            this.getCatalogingOptionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCatalogingOptionsOperationCompleted);
        }
        this.InvokeAsync("getCatalogingOptions", new object[] {
                    sessionId,
                    catalogId}, this.getCatalogingOptionsOperationCompleted, userState);
    }
    
    private void OngetCatalogingOptionsOperationCompleted(object arg) {
        if ((this.getCatalogingOptionsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getCatalogingOptionsCompleted(this, new getCatalogingOptionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public ingestConfig getIngestConfig([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string catalogId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool getPredefinedValues) {
        object[] results = this.Invoke("getIngestConfig", new object[] {
                    sessionId,
                    catalogId,
                    getPredefinedValues});
        return ((ingestConfig)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetIngestConfig(string sessionId, string catalogId, bool getPredefinedValues, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getIngestConfig", new object[] {
                    sessionId,
                    catalogId,
                    getPredefinedValues}, callback, asyncState);
    }
    
    /// <remarks/>
    public ingestConfig EndgetIngestConfig(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ingestConfig)(results[0]));
    }
    
    /// <remarks/>
    public void getIngestConfigAsync(string sessionId, string catalogId, bool getPredefinedValues) {
        this.getIngestConfigAsync(sessionId, catalogId, getPredefinedValues, null);
    }
    
    /// <remarks/>
    public void getIngestConfigAsync(string sessionId, string catalogId, bool getPredefinedValues, object userState) {
        if ((this.getIngestConfigOperationCompleted == null)) {
            this.getIngestConfigOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetIngestConfigOperationCompleted);
        }
        this.InvokeAsync("getIngestConfig", new object[] {
                    sessionId,
                    catalogId,
                    getPredefinedValues}, this.getIngestConfigOperationCompleted, userState);
    }
    
    private void OngetIngestConfigOperationCompleted(object arg) {
        if ((this.getIngestConfigCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getIngestConfigCompleted(this, new getIngestConfigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void synchronizeFolder([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string catalogId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string watchFolderId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string relativeFolderPath) {
        this.Invoke("synchronizeFolder", new object[] {
                    sessionId,
                    catalogId,
                    watchFolderId,
                    relativeFolderPath});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginsynchronizeFolder(string sessionId, string catalogId, string watchFolderId, string relativeFolderPath, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("synchronizeFolder", new object[] {
                    sessionId,
                    catalogId,
                    watchFolderId,
                    relativeFolderPath}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndsynchronizeFolder(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void synchronizeFolderAsync(string sessionId, string catalogId, string watchFolderId, string relativeFolderPath) {
        this.synchronizeFolderAsync(sessionId, catalogId, watchFolderId, relativeFolderPath, null);
    }
    
    /// <remarks/>
    public void synchronizeFolderAsync(string sessionId, string catalogId, string watchFolderId, string relativeFolderPath, object userState) {
        if ((this.synchronizeFolderOperationCompleted == null)) {
            this.synchronizeFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsynchronizeFolderOperationCompleted);
        }
        this.InvokeAsync("synchronizeFolder", new object[] {
                    sessionId,
                    catalogId,
                    watchFolderId,
                    relativeFolderPath}, this.synchronizeFolderOperationCompleted, userState);
    }
    
    private void OnsynchronizeFolderOperationCompleted(object arg) {
        if ((this.synchronizeFolderCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.synchronizeFolderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public string[] getServerFolderNames([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string parentPath) {
        object[] results = this.Invoke("getServerFolderNames", new object[] {
                    sessionId,
                    parentPath});
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetServerFolderNames(string sessionId, string parentPath, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getServerFolderNames", new object[] {
                    sessionId,
                    parentPath}, callback, asyncState);
    }
    
    /// <remarks/>
    public string[] EndgetServerFolderNames(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public void getServerFolderNamesAsync(string sessionId, string parentPath) {
        this.getServerFolderNamesAsync(sessionId, parentPath, null);
    }
    
    /// <remarks/>
    public void getServerFolderNamesAsync(string sessionId, string parentPath, object userState) {
        if ((this.getServerFolderNamesOperationCompleted == null)) {
            this.getServerFolderNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetServerFolderNamesOperationCompleted);
        }
        this.InvokeAsync("getServerFolderNames", new object[] {
                    sessionId,
                    parentPath}, this.getServerFolderNamesOperationCompleted, userState);
    }
    
    private void OngetServerFolderNamesOperationCompleted(object arg) {
        if ((this.getServerFolderNamesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getServerFolderNamesCompleted(this, new getServerFolderNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void updateAssetFieldValues([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string catalogId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] assetQuery assets, [System.Xml.Serialization.XmlElementAttribute("changes", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] fieldValuesChange[] changes, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool embedChangesInOriginal) {
        this.Invoke("updateAssetFieldValues", new object[] {
                    sessionId,
                    catalogId,
                    assets,
                    changes,
                    embedChangesInOriginal});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginupdateAssetFieldValues(string sessionId, string catalogId, assetQuery assets, fieldValuesChange[] changes, bool embedChangesInOriginal, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("updateAssetFieldValues", new object[] {
                    sessionId,
                    catalogId,
                    assets,
                    changes,
                    embedChangesInOriginal}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndupdateAssetFieldValues(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void updateAssetFieldValuesAsync(string sessionId, string catalogId, assetQuery assets, fieldValuesChange[] changes, bool embedChangesInOriginal) {
        this.updateAssetFieldValuesAsync(sessionId, catalogId, assets, changes, embedChangesInOriginal, null);
    }
    
    /// <remarks/>
    public void updateAssetFieldValuesAsync(string sessionId, string catalogId, assetQuery assets, fieldValuesChange[] changes, bool embedChangesInOriginal, object userState) {
        if ((this.updateAssetFieldValuesOperationCompleted == null)) {
            this.updateAssetFieldValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateAssetFieldValuesOperationCompleted);
        }
        this.InvokeAsync("updateAssetFieldValues", new object[] {
                    sessionId,
                    catalogId,
                    assets,
                    changes,
                    embedChangesInOriginal}, this.updateAssetFieldValuesOperationCompleted, userState);
    }
    
    private void OnupdateAssetFieldValuesOperationCompleted(object arg) {
        if ((this.updateAssetFieldValuesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.updateAssetFieldValuesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void updateGallery([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string catalogId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] gallery gallery) {
        this.Invoke("updateGallery", new object[] {
                    sessionId,
                    catalogId,
                    gallery});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginupdateGallery(string sessionId, string catalogId, gallery gallery, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("updateGallery", new object[] {
                    sessionId,
                    catalogId,
                    gallery}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndupdateGallery(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void updateGalleryAsync(string sessionId, string catalogId, gallery gallery) {
        this.updateGalleryAsync(sessionId, catalogId, gallery, null);
    }
    
    /// <remarks/>
    public void updateGalleryAsync(string sessionId, string catalogId, gallery gallery, object userState) {
        if ((this.updateGalleryOperationCompleted == null)) {
            this.updateGalleryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateGalleryOperationCompleted);
        }
        this.InvokeAsync("updateGallery", new object[] {
                    sessionId,
                    catalogId,
                    gallery}, this.updateGalleryOperationCompleted, userState);
    }
    
    private void OnupdateGalleryOperationCompleted(object arg) {
        if ((this.updateGalleryCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.updateGalleryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public task createTaskPreset([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] task task) {
        object[] results = this.Invoke("createTaskPreset", new object[] {
                    sessionId,
                    task});
        return ((task)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegincreateTaskPreset(string sessionId, task task, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("createTaskPreset", new object[] {
                    sessionId,
                    task}, callback, asyncState);
    }
    
    /// <remarks/>
    public task EndcreateTaskPreset(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((task)(results[0]));
    }
    
    /// <remarks/>
    public void createTaskPresetAsync(string sessionId, task task) {
        this.createTaskPresetAsync(sessionId, task, null);
    }
    
    /// <remarks/>
    public void createTaskPresetAsync(string sessionId, task task, object userState) {
        if ((this.createTaskPresetOperationCompleted == null)) {
            this.createTaskPresetOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateTaskPresetOperationCompleted);
        }
        this.InvokeAsync("createTaskPreset", new object[] {
                    sessionId,
                    task}, this.createTaskPresetOperationCompleted, userState);
    }
    
    private void OncreateTaskPresetOperationCompleted(object arg) {
        if ((this.createTaskPresetCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.createTaskPresetCompleted(this, new createTaskPresetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public System.Nullable<taskSetting>[] listTaskSettings() {
        object[] results = this.Invoke("listTaskSettings", new object[0]);
        return ((System.Nullable<taskSetting>[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginlistTaskSettings(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("listTaskSettings", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public System.Nullable<taskSetting>[] EndlistTaskSettings(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Nullable<taskSetting>[])(results[0]));
    }
    
    /// <remarks/>
    public void listTaskSettingsAsync() {
        this.listTaskSettingsAsync(null);
    }
    
    /// <remarks/>
    public void listTaskSettingsAsync(object userState) {
        if ((this.listTaskSettingsOperationCompleted == null)) {
            this.listTaskSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistTaskSettingsOperationCompleted);
        }
        this.InvokeAsync("listTaskSettings", new object[0], this.listTaskSettingsOperationCompleted, userState);
    }
    
    private void OnlistTaskSettingsOperationCompleted(object arg) {
        if ((this.listTaskSettingsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.listTaskSettingsCompleted(this, new listTaskSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public System.Nullable<colorMode>[] listColorMode() {
        object[] results = this.Invoke("listColorMode", new object[0]);
        return ((System.Nullable<colorMode>[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginlistColorMode(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("listColorMode", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public System.Nullable<colorMode>[] EndlistColorMode(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Nullable<colorMode>[])(results[0]));
    }
    
    /// <remarks/>
    public void listColorModeAsync() {
        this.listColorModeAsync(null);
    }
    
    /// <remarks/>
    public void listColorModeAsync(object userState) {
        if ((this.listColorModeOperationCompleted == null)) {
            this.listColorModeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistColorModeOperationCompleted);
        }
        this.InvokeAsync("listColorMode", new object[0], this.listColorModeOperationCompleted, userState);
    }
    
    private void OnlistColorModeOperationCompleted(object arg) {
        if ((this.listColorModeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.listColorModeCompleted(this, new listColorModeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public System.Nullable<outputFileFormat>[] listOutputFileFormat() {
        object[] results = this.Invoke("listOutputFileFormat", new object[0]);
        return ((System.Nullable<outputFileFormat>[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginlistOutputFileFormat(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("listOutputFileFormat", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public System.Nullable<outputFileFormat>[] EndlistOutputFileFormat(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Nullable<outputFileFormat>[])(results[0]));
    }
    
    /// <remarks/>
    public void listOutputFileFormatAsync() {
        this.listOutputFileFormatAsync(null);
    }
    
    /// <remarks/>
    public void listOutputFileFormatAsync(object userState) {
        if ((this.listOutputFileFormatOperationCompleted == null)) {
            this.listOutputFileFormatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistOutputFileFormatOperationCompleted);
        }
        this.InvokeAsync("listOutputFileFormat", new object[0], this.listOutputFileFormatOperationCompleted, userState);
    }
    
    private void OnlistOutputFileFormatOperationCompleted(object arg) {
        if ((this.listOutputFileFormatCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.listOutputFileFormatCompleted(this, new listOutputFileFormatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public System.Nullable<outputDestination>[] listOutputDestination() {
        object[] results = this.Invoke("listOutputDestination", new object[0]);
        return ((System.Nullable<outputDestination>[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginlistOutputDestination(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("listOutputDestination", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public System.Nullable<outputDestination>[] EndlistOutputDestination(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Nullable<outputDestination>[])(results[0]));
    }
    
    /// <remarks/>
    public void listOutputDestinationAsync() {
        this.listOutputDestinationAsync(null);
    }
    
    /// <remarks/>
    public void listOutputDestinationAsync(object userState) {
        if ((this.listOutputDestinationOperationCompleted == null)) {
            this.listOutputDestinationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistOutputDestinationOperationCompleted);
        }
        this.InvokeAsync("listOutputDestination", new object[0], this.listOutputDestinationOperationCompleted, userState);
    }
    
    private void OnlistOutputDestinationOperationCompleted(object arg) {
        if ((this.listOutputDestinationCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.listOutputDestinationCompleted(this, new listOutputDestinationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public System.Nullable<renameType>[] listRenameType() {
        object[] results = this.Invoke("listRenameType", new object[0]);
        return ((System.Nullable<renameType>[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginlistRenameType(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("listRenameType", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public System.Nullable<renameType>[] EndlistRenameType(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Nullable<renameType>[])(results[0]));
    }
    
    /// <remarks/>
    public void listRenameTypeAsync() {
        this.listRenameTypeAsync(null);
    }
    
    /// <remarks/>
    public void listRenameTypeAsync(object userState) {
        if ((this.listRenameTypeOperationCompleted == null)) {
            this.listRenameTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistRenameTypeOperationCompleted);
        }
        this.InvokeAsync("listRenameType", new object[0], this.listRenameTypeOperationCompleted, userState);
    }
    
    private void OnlistRenameTypeOperationCompleted(object arg) {
        if ((this.listRenameTypeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.listRenameTypeCompleted(this, new listRenameTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public System.Nullable<dngEmbedRawFile>[] listDNGEmbedRawFile() {
        object[] results = this.Invoke("listDNGEmbedRawFile", new object[0]);
        return ((System.Nullable<dngEmbedRawFile>[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginlistDNGEmbedRawFile(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("listDNGEmbedRawFile", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public System.Nullable<dngEmbedRawFile>[] EndlistDNGEmbedRawFile(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Nullable<dngEmbedRawFile>[])(results[0]));
    }
    
    /// <remarks/>
    public void listDNGEmbedRawFileAsync() {
        this.listDNGEmbedRawFileAsync(null);
    }
    
    /// <remarks/>
    public void listDNGEmbedRawFileAsync(object userState) {
        if ((this.listDNGEmbedRawFileOperationCompleted == null)) {
            this.listDNGEmbedRawFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistDNGEmbedRawFileOperationCompleted);
        }
        this.InvokeAsync("listDNGEmbedRawFile", new object[0], this.listDNGEmbedRawFileOperationCompleted, userState);
    }
    
    private void OnlistDNGEmbedRawFileOperationCompleted(object arg) {
        if ((this.listDNGEmbedRawFileCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.listDNGEmbedRawFileCompleted(this, new listDNGEmbedRawFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public System.Nullable<watermarkType>[] listWatermarkType() {
        object[] results = this.Invoke("listWatermarkType", new object[0]);
        return ((System.Nullable<watermarkType>[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginlistWatermarkType(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("listWatermarkType", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public System.Nullable<watermarkType>[] EndlistWatermarkType(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Nullable<watermarkType>[])(results[0]));
    }
    
    /// <remarks/>
    public void listWatermarkTypeAsync() {
        this.listWatermarkTypeAsync(null);
    }
    
    /// <remarks/>
    public void listWatermarkTypeAsync(object userState) {
        if ((this.listWatermarkTypeOperationCompleted == null)) {
            this.listWatermarkTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistWatermarkTypeOperationCompleted);
        }
        this.InvokeAsync("listWatermarkType", new object[0], this.listWatermarkTypeOperationCompleted, userState);
    }
    
    private void OnlistWatermarkTypeOperationCompleted(object arg) {
        if ((this.listWatermarkTypeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.listWatermarkTypeCompleted(this, new listWatermarkTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public System.Nullable<watermarkPosition>[] listWatermarkPosition() {
        object[] results = this.Invoke("listWatermarkPosition", new object[0]);
        return ((System.Nullable<watermarkPosition>[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginlistWatermarkPosition(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("listWatermarkPosition", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public System.Nullable<watermarkPosition>[] EndlistWatermarkPosition(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Nullable<watermarkPosition>[])(results[0]));
    }
    
    /// <remarks/>
    public void listWatermarkPositionAsync() {
        this.listWatermarkPositionAsync(null);
    }
    
    /// <remarks/>
    public void listWatermarkPositionAsync(object userState) {
        if ((this.listWatermarkPositionOperationCompleted == null)) {
            this.listWatermarkPositionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistWatermarkPositionOperationCompleted);
        }
        this.InvokeAsync("listWatermarkPosition", new object[0], this.listWatermarkPositionOperationCompleted, userState);
    }
    
    private void OnlistWatermarkPositionOperationCompleted(object arg) {
        if ((this.listWatermarkPositionCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.listWatermarkPositionCompleted(this, new listWatermarkPositionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public System.Nullable<addToCatalog>[] listAddToCatalog() {
        object[] results = this.Invoke("listAddToCatalog", new object[0]);
        return ((System.Nullable<addToCatalog>[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginlistAddToCatalog(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("listAddToCatalog", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public System.Nullable<addToCatalog>[] EndlistAddToCatalog(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Nullable<addToCatalog>[])(results[0]));
    }
    
    /// <remarks/>
    public void listAddToCatalogAsync() {
        this.listAddToCatalogAsync(null);
    }
    
    /// <remarks/>
    public void listAddToCatalogAsync(object userState) {
        if ((this.listAddToCatalogOperationCompleted == null)) {
            this.listAddToCatalogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistAddToCatalogOperationCompleted);
        }
        this.InvokeAsync("listAddToCatalog", new object[0], this.listAddToCatalogOperationCompleted, userState);
    }
    
    private void OnlistAddToCatalogOperationCompleted(object arg) {
        if ((this.listAddToCatalogCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.listAddToCatalogCompleted(this, new listAddToCatalogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public System.Nullable<compressionType>[] listCompressionType() {
        object[] results = this.Invoke("listCompressionType", new object[0]);
        return ((System.Nullable<compressionType>[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginlistCompressionType(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("listCompressionType", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public System.Nullable<compressionType>[] EndlistCompressionType(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Nullable<compressionType>[])(results[0]));
    }
    
    /// <remarks/>
    public void listCompressionTypeAsync() {
        this.listCompressionTypeAsync(null);
    }
    
    /// <remarks/>
    public void listCompressionTypeAsync(object userState) {
        if ((this.listCompressionTypeOperationCompleted == null)) {
            this.listCompressionTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistCompressionTypeOperationCompleted);
        }
        this.InvokeAsync("listCompressionType", new object[0], this.listCompressionTypeOperationCompleted, userState);
    }
    
    private void OnlistCompressionTypeOperationCompleted(object arg) {
        if ((this.listCompressionTypeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.listCompressionTypeCompleted(this, new listCompressionTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public System.Nullable<dngCameraRawVersion>[] listDngCameraRawVersion() {
        object[] results = this.Invoke("listDngCameraRawVersion", new object[0]);
        return ((System.Nullable<dngCameraRawVersion>[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginlistDngCameraRawVersion(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("listDngCameraRawVersion", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public System.Nullable<dngCameraRawVersion>[] EndlistDngCameraRawVersion(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Nullable<dngCameraRawVersion>[])(results[0]));
    }
    
    /// <remarks/>
    public void listDngCameraRawVersionAsync() {
        this.listDngCameraRawVersionAsync(null);
    }
    
    /// <remarks/>
    public void listDngCameraRawVersionAsync(object userState) {
        if ((this.listDngCameraRawVersionOperationCompleted == null)) {
            this.listDngCameraRawVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistDngCameraRawVersionOperationCompleted);
        }
        this.InvokeAsync("listDngCameraRawVersion", new object[0], this.listDngCameraRawVersionOperationCompleted, userState);
    }
    
    private void OnlistDngCameraRawVersionOperationCompleted(object arg) {
        if ((this.listDngCameraRawVersionCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.listDngCameraRawVersionCompleted(this, new listDngCameraRawVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public System.Nullable<dngJpegPreviewType>[] listDngJpegPreviewType() {
        object[] results = this.Invoke("listDngJpegPreviewType", new object[0]);
        return ((System.Nullable<dngJpegPreviewType>[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginlistDngJpegPreviewType(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("listDngJpegPreviewType", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public System.Nullable<dngJpegPreviewType>[] EndlistDngJpegPreviewType(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Nullable<dngJpegPreviewType>[])(results[0]));
    }
    
    /// <remarks/>
    public void listDngJpegPreviewTypeAsync() {
        this.listDngJpegPreviewTypeAsync(null);
    }
    
    /// <remarks/>
    public void listDngJpegPreviewTypeAsync(object userState) {
        if ((this.listDngJpegPreviewTypeOperationCompleted == null)) {
            this.listDngJpegPreviewTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistDngJpegPreviewTypeOperationCompleted);
        }
        this.InvokeAsync("listDngJpegPreviewType", new object[0], this.listDngJpegPreviewTypeOperationCompleted, userState);
    }
    
    private void OnlistDngJpegPreviewTypeOperationCompleted(object arg) {
        if ((this.listDngJpegPreviewTypeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.listDngJpegPreviewTypeCompleted(this, new listDngJpegPreviewTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public System.Nullable<resizeType>[] listResizeType() {
        object[] results = this.Invoke("listResizeType", new object[0]);
        return ((System.Nullable<resizeType>[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginlistResizeType(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("listResizeType", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public System.Nullable<resizeType>[] EndlistResizeType(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Nullable<resizeType>[])(results[0]));
    }
    
    /// <remarks/>
    public void listResizeTypeAsync() {
        this.listResizeTypeAsync(null);
    }
    
    /// <remarks/>
    public void listResizeTypeAsync(object userState) {
        if ((this.listResizeTypeOperationCompleted == null)) {
            this.listResizeTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistResizeTypeOperationCompleted);
        }
        this.InvokeAsync("listResizeType", new object[0], this.listResizeTypeOperationCompleted, userState);
    }
    
    private void OnlistResizeTypeOperationCompleted(object arg) {
        if ((this.listResizeTypeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.listResizeTypeCompleted(this, new listResizeTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public System.Nullable<unit>[] listUnit() {
        object[] results = this.Invoke("listUnit", new object[0]);
        return ((System.Nullable<unit>[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginlistUnit(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("listUnit", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public System.Nullable<unit>[] EndlistUnit(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Nullable<unit>[])(results[0]));
    }
    
    /// <remarks/>
    public void listUnitAsync() {
        this.listUnitAsync(null);
    }
    
    /// <remarks/>
    public void listUnitAsync(object userState) {
        if ((this.listUnitOperationCompleted == null)) {
            this.listUnitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistUnitOperationCompleted);
        }
        this.InvokeAsync("listUnit", new object[0], this.listUnitOperationCompleted, userState);
    }
    
    private void OnlistUnitOperationCompleted(object arg) {
        if ((this.listUnitCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.listUnitCompleted(this, new listUnitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void deleteTask([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] task task) {
        this.Invoke("deleteTask", new object[] {
                    sessionId,
                    task});
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindeleteTask(string sessionId, task task, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("deleteTask", new object[] {
                    sessionId,
                    task}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EnddeleteTask(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void deleteTaskAsync(string sessionId, task task) {
        this.deleteTaskAsync(sessionId, task, null);
    }
    
    /// <remarks/>
    public void deleteTaskAsync(string sessionId, task task, object userState) {
        if ((this.deleteTaskOperationCompleted == null)) {
            this.deleteTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteTaskOperationCompleted);
        }
        this.InvokeAsync("deleteTask", new object[] {
                    sessionId,
                    task}, this.deleteTaskOperationCompleted, userState);
    }
    
    private void OndeleteTaskOperationCompleted(object arg) {
        if ((this.deleteTaskCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.deleteTaskCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public assetQueryResults getAssetsWithBatchOfValues([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string catalogId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] assetQuery restrictionQuery, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] assetQuery matchingValuesQuery, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] assetQueryResultOptions resultOptions) {
        object[] results = this.Invoke("getAssetsWithBatchOfValues", new object[] {
                    sessionId,
                    catalogId,
                    restrictionQuery,
                    matchingValuesQuery,
                    resultOptions});
        return ((assetQueryResults)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetAssetsWithBatchOfValues(string sessionId, string catalogId, assetQuery restrictionQuery, assetQuery matchingValuesQuery, assetQueryResultOptions resultOptions, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getAssetsWithBatchOfValues", new object[] {
                    sessionId,
                    catalogId,
                    restrictionQuery,
                    matchingValuesQuery,
                    resultOptions}, callback, asyncState);
    }
    
    /// <remarks/>
    public assetQueryResults EndgetAssetsWithBatchOfValues(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((assetQueryResults)(results[0]));
    }
    
    /// <remarks/>
    public void getAssetsWithBatchOfValuesAsync(string sessionId, string catalogId, assetQuery restrictionQuery, assetQuery matchingValuesQuery, assetQueryResultOptions resultOptions) {
        this.getAssetsWithBatchOfValuesAsync(sessionId, catalogId, restrictionQuery, matchingValuesQuery, resultOptions, null);
    }
    
    /// <remarks/>
    public void getAssetsWithBatchOfValuesAsync(string sessionId, string catalogId, assetQuery restrictionQuery, assetQuery matchingValuesQuery, assetQueryResultOptions resultOptions, object userState) {
        if ((this.getAssetsWithBatchOfValuesOperationCompleted == null)) {
            this.getAssetsWithBatchOfValuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAssetsWithBatchOfValuesOperationCompleted);
        }
        this.InvokeAsync("getAssetsWithBatchOfValues", new object[] {
                    sessionId,
                    catalogId,
                    restrictionQuery,
                    matchingValuesQuery,
                    resultOptions}, this.getAssetsWithBatchOfValuesOperationCompleted, userState);
    }
    
    private void OngetAssetsWithBatchOfValuesOperationCompleted(object arg) {
        if ((this.getAssetsWithBatchOfValuesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getAssetsWithBatchOfValuesCompleted(this, new getAssetsWithBatchOfValuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public catalogChangeStatus[] getCatalogChangeStatus([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId) {
        object[] results = this.Invoke("getCatalogChangeStatus", new object[] {
                    sessionId});
        return ((catalogChangeStatus[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetCatalogChangeStatus(string sessionId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getCatalogChangeStatus", new object[] {
                    sessionId}, callback, asyncState);
    }
    
    /// <remarks/>
    public catalogChangeStatus[] EndgetCatalogChangeStatus(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((catalogChangeStatus[])(results[0]));
    }
    
    /// <remarks/>
    public void getCatalogChangeStatusAsync(string sessionId) {
        this.getCatalogChangeStatusAsync(sessionId, null);
    }
    
    /// <remarks/>
    public void getCatalogChangeStatusAsync(string sessionId, object userState) {
        if ((this.getCatalogChangeStatusOperationCompleted == null)) {
            this.getCatalogChangeStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCatalogChangeStatusOperationCompleted);
        }
        this.InvokeAsync("getCatalogChangeStatus", new object[] {
                    sessionId}, this.getCatalogChangeStatusOperationCompleted, userState);
    }
    
    private void OngetCatalogChangeStatusOperationCompleted(object arg) {
        if ((this.getCatalogChangeStatusCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getCatalogChangeStatusCompleted(this, new getCatalogChangeStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string getDefaultViewSettings([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string catalogId) {
        object[] results = this.Invoke("getDefaultViewSettings", new object[] {
                    sessionId,
                    catalogId});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetDefaultViewSettings(string sessionId, string catalogId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getDefaultViewSettings", new object[] {
                    sessionId,
                    catalogId}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndgetDefaultViewSettings(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void getDefaultViewSettingsAsync(string sessionId, string catalogId) {
        this.getDefaultViewSettingsAsync(sessionId, catalogId, null);
    }
    
    /// <remarks/>
    public void getDefaultViewSettingsAsync(string sessionId, string catalogId, object userState) {
        if ((this.getDefaultViewSettingsOperationCompleted == null)) {
            this.getDefaultViewSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDefaultViewSettingsOperationCompleted);
        }
        this.InvokeAsync("getDefaultViewSettings", new object[] {
                    sessionId,
                    catalogId}, this.getDefaultViewSettingsOperationCompleted, userState);
    }
    
    private void OngetDefaultViewSettingsOperationCompleted(object arg) {
        if ((this.getDefaultViewSettingsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getDefaultViewSettingsCompleted(this, new getDefaultViewSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public exclusionInfo getExclusionInfoForCatalog([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string catalogId) {
        object[] results = this.Invoke("getExclusionInfoForCatalog", new object[] {
                    sessionId,
                    catalogId});
        return ((exclusionInfo)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetExclusionInfoForCatalog(string sessionId, string catalogId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getExclusionInfoForCatalog", new object[] {
                    sessionId,
                    catalogId}, callback, asyncState);
    }
    
    /// <remarks/>
    public exclusionInfo EndgetExclusionInfoForCatalog(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((exclusionInfo)(results[0]));
    }
    
    /// <remarks/>
    public void getExclusionInfoForCatalogAsync(string sessionId, string catalogId) {
        this.getExclusionInfoForCatalogAsync(sessionId, catalogId, null);
    }
    
    /// <remarks/>
    public void getExclusionInfoForCatalogAsync(string sessionId, string catalogId, object userState) {
        if ((this.getExclusionInfoForCatalogOperationCompleted == null)) {
            this.getExclusionInfoForCatalogOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetExclusionInfoForCatalogOperationCompleted);
        }
        this.InvokeAsync("getExclusionInfoForCatalog", new object[] {
                    sessionId,
                    catalogId}, this.getExclusionInfoForCatalogOperationCompleted, userState);
    }
    
    private void OngetExclusionInfoForCatalogOperationCompleted(object arg) {
        if ((this.getExclusionInfoForCatalogCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getExclusionInfoForCatalogCompleted(this, new getExclusionInfoForCatalogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public task[] getTaskPresets([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string catalogId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string taskType) {
        object[] results = this.Invoke("getTaskPresets", new object[] {
                    sessionId,
                    catalogId,
                    taskType});
        return ((task[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetTaskPresets(string sessionId, string catalogId, string taskType, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getTaskPresets", new object[] {
                    sessionId,
                    catalogId,
                    taskType}, callback, asyncState);
    }
    
    /// <remarks/>
    public task[] EndgetTaskPresets(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((task[])(results[0]));
    }
    
    /// <remarks/>
    public void getTaskPresetsAsync(string sessionId, string catalogId, string taskType) {
        this.getTaskPresetsAsync(sessionId, catalogId, taskType, null);
    }
    
    /// <remarks/>
    public void getTaskPresetsAsync(string sessionId, string catalogId, string taskType, object userState) {
        if ((this.getTaskPresetsOperationCompleted == null)) {
            this.getTaskPresetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTaskPresetsOperationCompleted);
        }
        this.InvokeAsync("getTaskPresets", new object[] {
                    sessionId,
                    catalogId,
                    taskType}, this.getTaskPresetsOperationCompleted, userState);
    }
    
    private void OngetTaskPresetsOperationCompleted(object arg) {
        if ((this.getTaskPresetsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getTaskPresetsCompleted(this, new getTaskPresetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public string[] getUnmatchedFieldValuesFromBatchFind([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string queryCacheId) {
        object[] results = this.Invoke("getUnmatchedFieldValuesFromBatchFind", new object[] {
                    sessionId,
                    queryCacheId});
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetUnmatchedFieldValuesFromBatchFind(string sessionId, string queryCacheId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getUnmatchedFieldValuesFromBatchFind", new object[] {
                    sessionId,
                    queryCacheId}, callback, asyncState);
    }
    
    /// <remarks/>
    public string[] EndgetUnmatchedFieldValuesFromBatchFind(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public void getUnmatchedFieldValuesFromBatchFindAsync(string sessionId, string queryCacheId) {
        this.getUnmatchedFieldValuesFromBatchFindAsync(sessionId, queryCacheId, null);
    }
    
    /// <remarks/>
    public void getUnmatchedFieldValuesFromBatchFindAsync(string sessionId, string queryCacheId, object userState) {
        if ((this.getUnmatchedFieldValuesFromBatchFindOperationCompleted == null)) {
            this.getUnmatchedFieldValuesFromBatchFindOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUnmatchedFieldValuesFromBatchFindOperationCompleted);
        }
        this.InvokeAsync("getUnmatchedFieldValuesFromBatchFind", new object[] {
                    sessionId,
                    queryCacheId}, this.getUnmatchedFieldValuesFromBatchFindOperationCompleted, userState);
    }
    
    private void OngetUnmatchedFieldValuesFromBatchFindOperationCompleted(object arg) {
        if ((this.getUnmatchedFieldValuesFromBatchFindCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getUnmatchedFieldValuesFromBatchFindCompleted(this, new getUnmatchedFieldValuesFromBatchFindCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string getUserPreferences([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId) {
        object[] results = this.Invoke("getUserPreferences", new object[] {
                    sessionId});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetUserPreferences(string sessionId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getUserPreferences", new object[] {
                    sessionId}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndgetUserPreferences(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void getUserPreferencesAsync(string sessionId) {
        this.getUserPreferencesAsync(sessionId, null);
    }
    
    /// <remarks/>
    public void getUserPreferencesAsync(string sessionId, object userState) {
        if ((this.getUserPreferencesOperationCompleted == null)) {
            this.getUserPreferencesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserPreferencesOperationCompleted);
        }
        this.InvokeAsync("getUserPreferences", new object[] {
                    sessionId}, this.getUserPreferencesOperationCompleted, userState);
    }
    
    private void OngetUserPreferencesOperationCompleted(object arg) {
        if ((this.getUserPreferencesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getUserPreferencesCompleted(this, new getUserPreferencesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string getUserViewSettings([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string catalogId) {
        object[] results = this.Invoke("getUserViewSettings", new object[] {
                    sessionId,
                    catalogId});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetUserViewSettings(string sessionId, string catalogId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getUserViewSettings", new object[] {
                    sessionId,
                    catalogId}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndgetUserViewSettings(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void getUserViewSettingsAsync(string sessionId, string catalogId) {
        this.getUserViewSettingsAsync(sessionId, catalogId, null);
    }
    
    /// <remarks/>
    public void getUserViewSettingsAsync(string sessionId, string catalogId, object userState) {
        if ((this.getUserViewSettingsOperationCompleted == null)) {
            this.getUserViewSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserViewSettingsOperationCompleted);
        }
        this.InvokeAsync("getUserViewSettings", new object[] {
                    sessionId,
                    catalogId}, this.getUserViewSettingsOperationCompleted, userState);
    }
    
    private void OngetUserViewSettingsOperationCompleted(object arg) {
        if ((this.getUserViewSettingsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getUserViewSettingsCompleted(this, new getUserViewSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void primeAssetPreviews([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string catalogId, [System.Xml.Serialization.XmlElementAttribute("rids", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] System.Nullable<long>[] rids) {
        this.Invoke("primeAssetPreviews", new object[] {
                    sessionId,
                    catalogId,
                    rids});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginprimeAssetPreviews(string sessionId, string catalogId, System.Nullable<long>[] rids, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("primeAssetPreviews", new object[] {
                    sessionId,
                    catalogId,
                    rids}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndprimeAssetPreviews(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void primeAssetPreviewsAsync(string sessionId, string catalogId, System.Nullable<long>[] rids) {
        this.primeAssetPreviewsAsync(sessionId, catalogId, rids, null);
    }
    
    /// <remarks/>
    public void primeAssetPreviewsAsync(string sessionId, string catalogId, System.Nullable<long>[] rids, object userState) {
        if ((this.primeAssetPreviewsOperationCompleted == null)) {
            this.primeAssetPreviewsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnprimeAssetPreviewsOperationCompleted);
        }
        this.InvokeAsync("primeAssetPreviews", new object[] {
                    sessionId,
                    catalogId,
                    rids}, this.primeAssetPreviewsOperationCompleted, userState);
    }
    
    private void OnprimeAssetPreviewsOperationCompleted(object arg) {
        if ((this.primeAssetPreviewsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.primeAssetPreviewsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void setDefaultViewSettings([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string catalogId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string settings) {
        this.Invoke("setDefaultViewSettings", new object[] {
                    sessionId,
                    catalogId,
                    settings});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginsetDefaultViewSettings(string sessionId, string catalogId, string settings, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("setDefaultViewSettings", new object[] {
                    sessionId,
                    catalogId,
                    settings}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndsetDefaultViewSettings(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void setDefaultViewSettingsAsync(string sessionId, string catalogId, string settings) {
        this.setDefaultViewSettingsAsync(sessionId, catalogId, settings, null);
    }
    
    /// <remarks/>
    public void setDefaultViewSettingsAsync(string sessionId, string catalogId, string settings, object userState) {
        if ((this.setDefaultViewSettingsOperationCompleted == null)) {
            this.setDefaultViewSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetDefaultViewSettingsOperationCompleted);
        }
        this.InvokeAsync("setDefaultViewSettings", new object[] {
                    sessionId,
                    catalogId,
                    settings}, this.setDefaultViewSettingsOperationCompleted, userState);
    }
    
    private void OnsetDefaultViewSettingsOperationCompleted(object arg) {
        if ((this.setDefaultViewSettingsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.setDefaultViewSettingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void setSessionInactivityTimeout([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long timeoutInSeconds) {
        this.Invoke("setSessionInactivityTimeout", new object[] {
                    sessionId,
                    timeoutInSeconds});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginsetSessionInactivityTimeout(string sessionId, long timeoutInSeconds, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("setSessionInactivityTimeout", new object[] {
                    sessionId,
                    timeoutInSeconds}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndsetSessionInactivityTimeout(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void setSessionInactivityTimeoutAsync(string sessionId, long timeoutInSeconds) {
        this.setSessionInactivityTimeoutAsync(sessionId, timeoutInSeconds, null);
    }
    
    /// <remarks/>
    public void setSessionInactivityTimeoutAsync(string sessionId, long timeoutInSeconds, object userState) {
        if ((this.setSessionInactivityTimeoutOperationCompleted == null)) {
            this.setSessionInactivityTimeoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetSessionInactivityTimeoutOperationCompleted);
        }
        this.InvokeAsync("setSessionInactivityTimeout", new object[] {
                    sessionId,
                    timeoutInSeconds}, this.setSessionInactivityTimeoutOperationCompleted, userState);
    }
    
    private void OnsetSessionInactivityTimeoutOperationCompleted(object arg) {
        if ((this.setSessionInactivityTimeoutCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.setSessionInactivityTimeoutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void setUserPreferences([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string settings) {
        this.Invoke("setUserPreferences", new object[] {
                    sessionId,
                    settings});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginsetUserPreferences(string sessionId, string settings, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("setUserPreferences", new object[] {
                    sessionId,
                    settings}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndsetUserPreferences(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void setUserPreferencesAsync(string sessionId, string settings) {
        this.setUserPreferencesAsync(sessionId, settings, null);
    }
    
    /// <remarks/>
    public void setUserPreferencesAsync(string sessionId, string settings, object userState) {
        if ((this.setUserPreferencesOperationCompleted == null)) {
            this.setUserPreferencesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetUserPreferencesOperationCompleted);
        }
        this.InvokeAsync("setUserPreferences", new object[] {
                    sessionId,
                    settings}, this.setUserPreferencesOperationCompleted, userState);
    }
    
    private void OnsetUserPreferencesOperationCompleted(object arg) {
        if ((this.setUserPreferencesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.setUserPreferencesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public void setUserViewSettings([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string catalogId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string settings) {
        this.Invoke("setUserViewSettings", new object[] {
                    sessionId,
                    catalogId,
                    settings});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginsetUserViewSettings(string sessionId, string catalogId, string settings, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("setUserViewSettings", new object[] {
                    sessionId,
                    catalogId,
                    settings}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndsetUserViewSettings(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void setUserViewSettingsAsync(string sessionId, string catalogId, string settings) {
        this.setUserViewSettingsAsync(sessionId, catalogId, settings, null);
    }
    
    /// <remarks/>
    public void setUserViewSettingsAsync(string sessionId, string catalogId, string settings, object userState) {
        if ((this.setUserViewSettingsOperationCompleted == null)) {
            this.setUserViewSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetUserViewSettingsOperationCompleted);
        }
        this.InvokeAsync("setUserViewSettings", new object[] {
                    sessionId,
                    catalogId,
                    settings}, this.setUserViewSettingsOperationCompleted, userState);
    }
    
    private void OnsetUserViewSettingsOperationCompleted(object arg) {
        if ((this.setUserViewSettingsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.setUserViewSettingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public task updateTaskPreset([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] task task) {
        object[] results = this.Invoke("updateTaskPreset", new object[] {
                    sessionId,
                    task});
        return ((task)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginupdateTaskPreset(string sessionId, task task, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("updateTaskPreset", new object[] {
                    sessionId,
                    task}, callback, asyncState);
    }
    
    /// <remarks/>
    public task EndupdateTaskPreset(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((task)(results[0]));
    }
    
    /// <remarks/>
    public void updateTaskPresetAsync(string sessionId, task task) {
        this.updateTaskPresetAsync(sessionId, task, null);
    }
    
    /// <remarks/>
    public void updateTaskPresetAsync(string sessionId, task task, object userState) {
        if ((this.updateTaskPresetOperationCompleted == null)) {
            this.updateTaskPresetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateTaskPresetOperationCompleted);
        }
        this.InvokeAsync("updateTaskPreset", new object[] {
                    sessionId,
                    task}, this.updateTaskPresetOperationCompleted, userState);
    }
    
    private void OnupdateTaskPresetOperationCompleted(object arg) {
        if ((this.updateTaskPresetCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.updateTaskPresetCompleted(this, new updateTaskPresetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public int uploadFile([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg0, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string arg3, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)] byte[] arg4) {
        object[] results = this.Invoke("uploadFile", new object[] {
                    arg0,
                    arg1,
                    arg2,
                    arg3,
                    arg4});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginuploadFile(string arg0, string arg1, string arg2, string arg3, byte[] arg4, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("uploadFile", new object[] {
                    arg0,
                    arg1,
                    arg2,
                    arg3,
                    arg4}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EnduploadFile(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void uploadFileAsync(string arg0, string arg1, string arg2, string arg3, byte[] arg4) {
        this.uploadFileAsync(arg0, arg1, arg2, arg3, arg4, null);
    }
    
    /// <remarks/>
    public void uploadFileAsync(string arg0, string arg1, string arg2, string arg3, byte[] arg4, object userState) {
        if ((this.uploadFileOperationCompleted == null)) {
            this.uploadFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuploadFileOperationCompleted);
        }
        this.InvokeAsync("uploadFile", new object[] {
                    arg0,
                    arg1,
                    arg2,
                    arg3,
                    arg4}, this.uploadFileOperationCompleted, userState);
    }
    
    private void OnuploadFileOperationCompleted(object arg) {
        if ((this.uploadFileCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.uploadFileCompleted(this, new uploadFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public string[] getVideoExtensions() {
        object[] results = this.Invoke("getVideoExtensions", new object[0]);
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetVideoExtensions(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getVideoExtensions", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public string[] EndgetVideoExtensions(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public void getVideoExtensionsAsync() {
        this.getVideoExtensionsAsync(null);
    }
    
    /// <remarks/>
    public void getVideoExtensionsAsync(object userState) {
        if ((this.getVideoExtensionsOperationCompleted == null)) {
            this.getVideoExtensionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetVideoExtensionsOperationCompleted);
        }
        this.InvokeAsync("getVideoExtensions", new object[0], this.getVideoExtensionsOperationCompleted, userState);
    }
    
    private void OngetVideoExtensionsOperationCompleted(object arg) {
        if ((this.getVideoExtensionsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getVideoExtensionsCompleted(this, new getVideoExtensionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public string[] getAudioExtensions() {
        object[] results = this.Invoke("getAudioExtensions", new object[0]);
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetAudioExtensions(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getAudioExtensions", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public string[] EndgetAudioExtensions(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public void getAudioExtensionsAsync() {
        this.getAudioExtensionsAsync(null);
    }
    
    /// <remarks/>
    public void getAudioExtensionsAsync(object userState) {
        if ((this.getAudioExtensionsOperationCompleted == null)) {
            this.getAudioExtensionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAudioExtensionsOperationCompleted);
        }
        this.InvokeAsync("getAudioExtensions", new object[0], this.getAudioExtensionsOperationCompleted, userState);
    }
    
    private void OngetAudioExtensionsOperationCompleted(object arg) {
        if ((this.getAudioExtensionsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getAudioExtensionsCompleted(this, new getAudioExtensionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://portfolio.extensis/service/asset", ResponseNamespace="http://portfolio.extensis/service/asset", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string[] completion([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string catalogId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string completionTerm) {
        object[] results = this.Invoke("completion", new object[] {
                    sessionId,
                    catalogId,
                    completionTerm});
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult Begincompletion(string sessionId, string catalogId, string completionTerm, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("completion", new object[] {
                    sessionId,
                    catalogId,
                    completionTerm}, callback, asyncState);
    }
    
    /// <remarks/>
    public string[] Endcompletion(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string[])(results[0]));
    }
    
    /// <remarks/>
    public void completionAsync(string sessionId, string catalogId, string completionTerm) {
        this.completionAsync(sessionId, catalogId, completionTerm, null);
    }
    
    /// <remarks/>
    public void completionAsync(string sessionId, string catalogId, string completionTerm, object userState) {
        if ((this.completionOperationCompleted == null)) {
            this.completionOperationCompleted = new System.Threading.SendOrPostCallback(this.OncompletionOperationCompleted);
        }
        this.InvokeAsync("completion", new object[] {
                    sessionId,
                    catalogId,
                    completionTerm}, this.completionOperationCompleted, userState);
    }
    
    private void OncompletionOperationCompleted(object arg) {
        if ((this.completionCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.completionCompleted(this, new completionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://portfolio.extensis/service/asset")]
public partial class assetQuery {
    
    private string galleryIdField;
    
    private string queryCacheIdField;
    
    private assetQueryTerm queryTermField;
    
    private sortOptions sortOptionsField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public string galleryId {
        get {
            return this.galleryIdField;
        }
        set {
            this.galleryIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public string queryCacheId {
        get {
            return this.queryCacheIdField;
        }
        set {
            this.queryCacheIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public assetQueryTerm queryTerm {
        get {
            return this.queryTermField;
        }
        set {
            this.queryTermField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public sortOptions sortOptions {
        get {
            return this.sortOptionsField;
        }
        set {
            this.sortOptionsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://portfolio.extensis/service/asset")]
public partial class assetQueryTerm {
    
    private string fieldNameField;
    
    private System.Nullable<queryOperator> operatorField;
    
    private assetQueryTerm[] subqueriesField;
    
    private string[] valuesField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public string fieldName {
        get {
            return this.fieldNameField;
        }
        set {
            this.fieldNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public System.Nullable<queryOperator> @operator {
        get {
            return this.operatorField;
        }
        set {
            this.operatorField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("subqueries", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public assetQueryTerm[] subqueries {
        get {
            return this.subqueriesField;
        }
        set {
            this.subqueriesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("values", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public string[] values {
        get {
            return this.valuesField;
        }
        set {
            this.valuesField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://portfolio.extensis/service/asset")]
public enum queryOperator {
    
    /// <remarks/>
    operatorAnd,
    
    /// <remarks/>
    operatorOr,
    
    /// <remarks/>
    assetsById,
    
    /// <remarks/>
    notNullValue,
    
    /// <remarks/>
    nullValue,
    
    /// <remarks/>
    equalValue,
    
    /// <remarks/>
    notEqualValue,
    
    /// <remarks/>
    containsValue,
    
    /// <remarks/>
    startsWithValue,
    
    /// <remarks/>
    endsWithValue,
    
    /// <remarks/>
    notContainsValue,
    
    /// <remarks/>
    notStartsWithValue,
    
    /// <remarks/>
    notEndsWithValue,
    
    /// <remarks/>
    lessThanValue,
    
    /// <remarks/>
    greaterThanValue,
    
    /// <remarks/>
    lessThanOrEqualValue,
    
    /// <remarks/>
    greaterThanOrEqualValue,
    
    /// <remarks/>
    matchUnparsedQueryString,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://portfolio.extensis/service/asset")]
public partial class exclusionInfo {
    
    private bool allowAllExtensionsField;
    
    private string[] allowedExtensionsField;
    
    private attribute[] pathExclusionsField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool allowAllExtensions {
        get {
            return this.allowAllExtensionsField;
        }
        set {
            this.allowAllExtensionsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("allowedExtensions", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public string[] allowedExtensions {
        get {
            return this.allowedExtensionsField;
        }
        set {
            this.allowedExtensionsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("pathExclusions", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public attribute[] pathExclusions {
        get {
            return this.pathExclusionsField;
        }
        set {
            this.pathExclusionsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://portfolio.extensis/service/asset")]
public partial class attribute {
    
    private string valueField;
    
    private string nameField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://portfolio.extensis/service/asset")]
public partial class catalogChangeStatus {
    
    private string catalogIdField;
    
    private attribute[] cnField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string catalogId {
        get {
            return this.catalogIdField;
        }
        set {
            this.catalogIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("cn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public attribute[] cn {
        get {
            return this.cnField;
        }
        set {
            this.cnField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://portfolio.extensis/service/asset")]
public partial class fieldValuesChange {
    
    private fieldValuesChangeAction actionField;
    
    private bool actionFieldSpecified;
    
    private string[] existingValuesField;
    
    private string fieldNameField;
    
    private string[] newValuesField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public fieldValuesChangeAction action {
        get {
            return this.actionField;
        }
        set {
            this.actionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool actionSpecified {
        get {
            return this.actionFieldSpecified;
        }
        set {
            this.actionFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("existingValues", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public string[] existingValues {
        get {
            return this.existingValuesField;
        }
        set {
            this.existingValuesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string fieldName {
        get {
            return this.fieldNameField;
        }
        set {
            this.fieldNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("newValues", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public string[] newValues {
        get {
            return this.newValuesField;
        }
        set {
            this.newValuesField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://portfolio.extensis/service/asset")]
public enum fieldValuesChangeAction {
    
    /// <remarks/>
    add,
    
    /// <remarks/>
    replaceAllValues,
    
    /// <remarks/>
    replace,
    
    /// <remarks/>
    append,
    
    /// <remarks/>
    delete,
    
    /// <remarks/>
    deleteAllValues,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://portfolio.extensis/service/asset")]
public partial class ingestField {
    
    private fieldDefinition fieldDefinitionField;
    
    private bool requiredField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public fieldDefinition fieldDefinition {
        get {
            return this.fieldDefinitionField;
        }
        set {
            this.fieldDefinitionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool required {
        get {
            return this.requiredField;
        }
        set {
            this.requiredField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://portfolio.extensis/service/asset")]
public partial class fieldDefinition {
    
    private string[] defaultValuesField;
    
    private bool embeddableField;
    
    private bool hasPredefinedValuesField;
    
    private bool hierarchicalField;
    
    private string idField;
    
    private string internalNameField;
    
    private attribute[] localizedNamesField;
    
    private int maxLengthField;
    
    private bool multivaluedField;
    
    private nestedValue[] nestedPredefinedValuesField;
    
    private int precisionField;
    
    private string[] predefinedValuesField;
    
    private bool searchableField;
    
    private bool showTimeField;
    
    private bool sortableField;
    
    private string systemNameField;
    
    private int typeField;
    
    private bool usePredefinedOnlyField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("defaultValues", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public string[] defaultValues {
        get {
            return this.defaultValuesField;
        }
        set {
            this.defaultValuesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool embeddable {
        get {
            return this.embeddableField;
        }
        set {
            this.embeddableField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool hasPredefinedValues {
        get {
            return this.hasPredefinedValuesField;
        }
        set {
            this.hasPredefinedValuesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool hierarchical {
        get {
            return this.hierarchicalField;
        }
        set {
            this.hierarchicalField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string id {
        get {
            return this.idField;
        }
        set {
            this.idField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string internalName {
        get {
            return this.internalNameField;
        }
        set {
            this.internalNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("localizedNames", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public attribute[] localizedNames {
        get {
            return this.localizedNamesField;
        }
        set {
            this.localizedNamesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public int maxLength {
        get {
            return this.maxLengthField;
        }
        set {
            this.maxLengthField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool multivalued {
        get {
            return this.multivaluedField;
        }
        set {
            this.multivaluedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("nestedPredefinedValues", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public nestedValue[] nestedPredefinedValues {
        get {
            return this.nestedPredefinedValuesField;
        }
        set {
            this.nestedPredefinedValuesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public int precision {
        get {
            return this.precisionField;
        }
        set {
            this.precisionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("predefinedValues", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public string[] predefinedValues {
        get {
            return this.predefinedValuesField;
        }
        set {
            this.predefinedValuesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool searchable {
        get {
            return this.searchableField;
        }
        set {
            this.searchableField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool showTime {
        get {
            return this.showTimeField;
        }
        set {
            this.showTimeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool sortable {
        get {
            return this.sortableField;
        }
        set {
            this.sortableField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string systemName {
        get {
            return this.systemNameField;
        }
        set {
            this.systemNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public int type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool usePredefinedOnly {
        get {
            return this.usePredefinedOnlyField;
        }
        set {
            this.usePredefinedOnlyField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://portfolio.extensis/service/asset")]
public partial class nestedValue {
    
    private nestedValue[] childrenField;
    
    private string idField;
    
    private string parentIdField;
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("children", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public nestedValue[] children {
        get {
            return this.childrenField;
        }
        set {
            this.childrenField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string id {
        get {
            return this.idField;
        }
        set {
            this.idField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string parentId {
        get {
            return this.parentIdField;
        }
        set {
            this.parentIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://portfolio.extensis/service/asset")]
public partial class ingestConfig {
    
    private ingestField[] fieldsField;
    
    private string headerTextField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("fields", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public ingestField[] fields {
        get {
            return this.fieldsField;
        }
        set {
            this.fieldsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string headerText {
        get {
            return this.headerTextField;
        }
        set {
            this.headerTextField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://portfolio.extensis/service/asset")]
public partial class catalogingOptions {
    
    private bool extractMetadataField;
    
    private bool indexDocumentTextField;
    
    private long keywordsFromPathStyleField;
    
    private string languageField;
    
    private bool parseKeywordsField;
    
    private int thumbnailSizeField;
    
    private bool useConstrainedIngestField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool extractMetadata {
        get {
            return this.extractMetadataField;
        }
        set {
            this.extractMetadataField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool indexDocumentText {
        get {
            return this.indexDocumentTextField;
        }
        set {
            this.indexDocumentTextField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public long keywordsFromPathStyle {
        get {
            return this.keywordsFromPathStyleField;
        }
        set {
            this.keywordsFromPathStyleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string language {
        get {
            return this.languageField;
        }
        set {
            this.languageField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool parseKeywords {
        get {
            return this.parseKeywordsField;
        }
        set {
            this.parseKeywordsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public int thumbnailSize {
        get {
            return this.thumbnailSizeField;
        }
        set {
            this.thumbnailSizeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool useConstrainedIngest {
        get {
            return this.useConstrainedIngestField;
        }
        set {
            this.useConstrainedIngestField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://portfolio.extensis/service/asset")]
public partial class task {
    
    private string catalogIdField;
    
    private string nameField;
    
    private attribute[] settingsField;
    
    private string taskIdField;
    
    private taskType typeField;
    
    private bool typeFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string catalogId {
        get {
            return this.catalogIdField;
        }
        set {
            this.catalogIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("settings", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public attribute[] settings {
        get {
            return this.settingsField;
        }
        set {
            this.settingsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public string taskId {
        get {
            return this.taskIdField;
        }
        set {
            this.taskIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public taskType type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool typeSpecified {
        get {
            return this.typeFieldSpecified;
        }
        set {
            this.typeFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://portfolio.extensis/service/asset")]
public enum taskType {
    
    /// <remarks/>
    runScript,
    
    /// <remarks/>
    convert,
    
    /// <remarks/>
    rename,
    
    /// <remarks/>
    saveOnDisk,
    
    /// <remarks/>
    download,
    
    /// <remarks/>
    regenerateThumbnail,
    
    /// <remarks/>
    updateAssetProperties,
    
    /// <remarks/>
    moveAssets,
    
    /// <remarks/>
    contactSheet,
    
    /// <remarks/>
    importData,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://portfolio.extensis/service/asset")]
public partial class semaphore {
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://portfolio.extensis/service/asset")]
public partial class job {
    
    private semaphore completionSemaphoreField;
    
    private locale clientLocaleField;
    
    private bool clientLocaleFieldSpecified;
    
    private int clientTimeZoneOffsetField;
    
    private string descriptionField;
    
    private string jobIdField;
    
    private sourceImage sourceImageField;
    
    private bool sourceImageFieldSpecified;
    
    private task[] tasksField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public semaphore completionSemaphore {
        get {
            return this.completionSemaphoreField;
        }
        set {
            this.completionSemaphoreField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public locale clientLocale {
        get {
            return this.clientLocaleField;
        }
        set {
            this.clientLocaleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool clientLocaleSpecified {
        get {
            return this.clientLocaleFieldSpecified;
        }
        set {
            this.clientLocaleFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public int clientTimeZoneOffset {
        get {
            return this.clientTimeZoneOffsetField;
        }
        set {
            this.clientTimeZoneOffsetField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string description {
        get {
            return this.descriptionField;
        }
        set {
            this.descriptionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string jobId {
        get {
            return this.jobIdField;
        }
        set {
            this.jobIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public sourceImage sourceImage {
        get {
            return this.sourceImageField;
        }
        set {
            this.sourceImageField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool sourceImageSpecified {
        get {
            return this.sourceImageFieldSpecified;
        }
        set {
            this.sourceImageFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("tasks", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public task[] tasks {
        get {
            return this.tasksField;
        }
        set {
            this.tasksField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://portfolio.extensis/service/asset")]
public enum locale {
    
    /// <remarks/>
    en_US,
    
    /// <remarks/>
    en_GB,
    
    /// <remarks/>
    en_ES,
    
    /// <remarks/>
    de_DE,
    
    /// <remarks/>
    fr_FR,
    
    /// <remarks/>
    it_IT,
    
    /// <remarks/>
    ja_JP,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://portfolio.extensis/service/asset")]
public enum sourceImage {
    
    /// <remarks/>
    original,
    
    /// <remarks/>
    preview,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://portfolio.extensis/service/asset")]
public partial class jobStatus {
    
    private string catalogIdField;
    
    private string descriptionField;
    
    private attribute[] jobDetailsField;
    
    private string jobIdField;
    
    private jobStatusType statusField;
    
    private bool statusFieldSpecified;
    
    private string timeCompletedField;
    
    private string timeSubmittedField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string catalogId {
        get {
            return this.catalogIdField;
        }
        set {
            this.catalogIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string description {
        get {
            return this.descriptionField;
        }
        set {
            this.descriptionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("jobDetails", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public attribute[] jobDetails {
        get {
            return this.jobDetailsField;
        }
        set {
            this.jobDetailsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string jobId {
        get {
            return this.jobIdField;
        }
        set {
            this.jobIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public jobStatusType status {
        get {
            return this.statusField;
        }
        set {
            this.statusField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool statusSpecified {
        get {
            return this.statusFieldSpecified;
        }
        set {
            this.statusFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string timeCompleted {
        get {
            return this.timeCompletedField;
        }
        set {
            this.timeCompletedField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string timeSubmitted {
        get {
            return this.timeSubmittedField;
        }
        set {
            this.timeSubmittedField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://portfolio.extensis/service/asset")]
public enum jobStatusType {
    
    /// <remarks/>
    retrieving,
    
    /// <remarks/>
    queued,
    
    /// <remarks/>
    inProgress,
    
    /// <remarks/>
    complete,
    
    /// <remarks/>
    canceled,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://portfolio.extensis/service/asset")]
public partial class keySpecification {
    
    private string exponentField;
    
    private string modulusBase16Field;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string exponent {
        get {
            return this.exponentField;
        }
        set {
            this.exponentField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string modulusBase16 {
        get {
            return this.modulusBase16Field;
        }
        set {
            this.modulusBase16Field = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://portfolio.extensis/service/asset")]
public partial class folder {
    
    private folder[] sField;
    
    private int fField;
    
    private bool fFieldSpecified;
    
    private int mField;
    
    private bool mFieldSpecified;
    
    private string nField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("s", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public folder[] s {
        get {
            return this.sField;
        }
        set {
            this.sField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public int f {
        get {
            return this.fField;
        }
        set {
            this.fField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool fSpecified {
        get {
            return this.fFieldSpecified;
        }
        set {
            this.fFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public int m {
        get {
            return this.mField;
        }
        set {
            this.mField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool mSpecified {
        get {
            return this.mFieldSpecified;
        }
        set {
            this.mFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string n {
        get {
            return this.nField;
        }
        set {
            this.nField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://portfolio.extensis/service/asset")]
public partial class catalog {
    
    private string catalogIdField;
    
    private attribute[] detailsField;
    
    private string nameField;
    
    private bool wereUsersImportedField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string catalogId {
        get {
            return this.catalogIdField;
        }
        set {
            this.catalogIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("details", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public attribute[] details {
        get {
            return this.detailsField;
        }
        set {
            this.detailsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool wereUsersImported {
        get {
            return this.wereUsersImportedField;
        }
        set {
            this.wereUsersImportedField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://portfolio.extensis/service/asset")]
public partial class catalogPermissions {
    
    private string catalogIdField;
    
    private System.Nullable<userPermission>[] enabledPermissionsField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string catalogId {
        get {
            return this.catalogIdField;
        }
        set {
            this.catalogIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("enabledPermissions", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public System.Nullable<userPermission>[] enabledPermissions {
        get {
            return this.enabledPermissionsField;
        }
        set {
            this.enabledPermissionsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://portfolio.extensis/service/asset")]
public enum userPermission {
    
    /// <remarks/>
    canAdministerCatalog,
    
    /// <remarks/>
    addAsset,
    
    /// <remarks/>
    modifyAssetProperties,
    
    /// <remarks/>
    deleteAssetContents,
    
    /// <remarks/>
    modifyAssetContents,
    
    /// <remarks/>
    downloadPreviews,
    
    /// <remarks/>
    accessOriginals,
    
    /// <remarks/>
    saveOutputSetting,
    
    /// <remarks/>
    useCustomPresets,
    
    /// <remarks/>
    deleteAssetFromCatalog,
    
    /// <remarks/>
    canModifyFolderStructure,
    
    /// <remarks/>
    canMoveAssets,
    
    /// <remarks/>
    canEmbedMetadata,
    
    /// <remarks/>
    canImportMetadata,
    
    /// <remarks/>
    canManagePublicGallery,
    
    /// <remarks/>
    createContactSheet,
    
    /// <remarks/>
    synchronizeAutoSyncFolder,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://portfolio.extensis/service/asset")]
public partial class multiValuedAttribute {
    
    private string nameField;
    
    private string[] valuesField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("values", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public string[] values {
        get {
            return this.valuesField;
        }
        set {
            this.valuesField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://portfolio.extensis/service/asset")]
public partial class asset {
    
    private string assetIdField;
    
    private multiValuedAttribute[] attributesField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string assetId {
        get {
            return this.assetIdField;
        }
        set {
            this.assetIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("attributes", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public multiValuedAttribute[] attributes {
        get {
            return this.attributesField;
        }
        set {
            this.attributesField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://portfolio.extensis/service/asset")]
public partial class assetQueryResults {
    
    private asset[] assetsField;
    
    private string queryCacheIdField;
    
    private int totalNumberOfAssetsField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("assets", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public asset[] assets {
        get {
            return this.assetsField;
        }
        set {
            this.assetsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public string queryCacheId {
        get {
            return this.queryCacheIdField;
        }
        set {
            this.queryCacheIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public int totalNumberOfAssets {
        get {
            return this.totalNumberOfAssetsField;
        }
        set {
            this.totalNumberOfAssetsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://portfolio.extensis/service/asset")]
public partial class assetQueryResultOptions {
    
    private string[] fieldNamesField;
    
    private int pageSizeField;
    
    private int startingIndexField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("fieldNames", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public string[] fieldNames {
        get {
            return this.fieldNamesField;
        }
        set {
            this.fieldNamesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public int pageSize {
        get {
            return this.pageSizeField;
        }
        set {
            this.pageSizeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public int startingIndex {
        get {
            return this.startingIndexField;
        }
        set {
            this.startingIndexField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://portfolio.extensis/service/asset")]
public partial class watchFolder {
    
    private string catalogingOptionsIdField;
    
    private int currentStatusField;
    
    private string pathField;
    
    private bool removeMissingItemsField;
    
    private bool scanContinuouslyForChangesField;
    
    private bool scanContinuouslyForChangesFieldSpecified;
    
    private int syncFrequencyInSecondsField;
    
    private int syncStartTimeInSecondsFromMidnightField;
    
    private syncOptions synchronizeField;
    
    private bool synchronizeFieldSpecified;
    
    private string watchFolderIdField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string catalogingOptionsId {
        get {
            return this.catalogingOptionsIdField;
        }
        set {
            this.catalogingOptionsIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public int currentStatus {
        get {
            return this.currentStatusField;
        }
        set {
            this.currentStatusField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string path {
        get {
            return this.pathField;
        }
        set {
            this.pathField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool removeMissingItems {
        get {
            return this.removeMissingItemsField;
        }
        set {
            this.removeMissingItemsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool scanContinuouslyForChanges {
        get {
            return this.scanContinuouslyForChangesField;
        }
        set {
            this.scanContinuouslyForChangesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool scanContinuouslyForChangesSpecified {
        get {
            return this.scanContinuouslyForChangesFieldSpecified;
        }
        set {
            this.scanContinuouslyForChangesFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public int syncFrequencyInSeconds {
        get {
            return this.syncFrequencyInSecondsField;
        }
        set {
            this.syncFrequencyInSecondsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public int syncStartTimeInSecondsFromMidnight {
        get {
            return this.syncStartTimeInSecondsFromMidnightField;
        }
        set {
            this.syncStartTimeInSecondsFromMidnightField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public syncOptions synchronize {
        get {
            return this.synchronizeField;
        }
        set {
            this.synchronizeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool synchronizeSpecified {
        get {
            return this.synchronizeFieldSpecified;
        }
        set {
            this.synchronizeFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string watchFolderId {
        get {
            return this.watchFolderIdField;
        }
        set {
            this.watchFolderIdField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://portfolio.extensis/service/asset")]
public enum syncOptions {
    
    /// <remarks/>
    manual,
    
    /// <remarks/>
    whenChangesAreFound,
    
    /// <remarks/>
    onSchedule,
    
    /// <remarks/>
    atSpecificTime,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://portfolio.extensis/service/asset")]
public partial class gallery {
    
    private galleryAccessType accessTypeField;
    
    private bool accessTypeFieldSpecified;
    
    private string galleryIdField;
    
    private string nameField;
    
    private string ownerField;
    
    private assetQueryTerm savedFindField;
    
    private galleryType typeField;
    
    private bool typeFieldSpecified;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public galleryAccessType accessType {
        get {
            return this.accessTypeField;
        }
        set {
            this.accessTypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool accessTypeSpecified {
        get {
            return this.accessTypeFieldSpecified;
        }
        set {
            this.accessTypeFieldSpecified = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string galleryId {
        get {
            return this.galleryIdField;
        }
        set {
            this.galleryIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string owner {
        get {
            return this.ownerField;
        }
        set {
            this.ownerField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public assetQueryTerm savedFind {
        get {
            return this.savedFindField;
        }
        set {
            this.savedFindField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public galleryType type {
        get {
            return this.typeField;
        }
        set {
            this.typeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public bool typeSpecified {
        get {
            return this.typeFieldSpecified;
        }
        set {
            this.typeFieldSpecified = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://portfolio.extensis/service/asset")]
public enum galleryAccessType {
    
    /// <remarks/>
    publicAccess,
    
    /// <remarks/>
    privateAccess,
    
    /// <remarks/>
    lockedAccess,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://portfolio.extensis/service/asset")]
public enum galleryType {
    
    /// <remarks/>
    saved,
    
    /// <remarks/>
    smart,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://portfolio.extensis/service/asset")]
public partial class sortOptions {
    
    private string sortFieldNameField;
    
    private bool sortOrderAscendingField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
    public string sortFieldName {
        get {
            return this.sortFieldNameField;
        }
        set {
            this.sortFieldNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public bool sortOrderAscending {
        get {
            return this.sortOrderAscendingField;
        }
        set {
            this.sortOrderAscendingField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://portfolio.extensis/service/asset")]
public enum taskSetting {
    
    /// <remarks/>
    scriptName,
    
    /// <remarks/>
    propertyName,
    
    /// <remarks/>
    action,
    
    /// <remarks/>
    existingValue,
    
    /// <remarks/>
    newValue,
    
    /// <remarks/>
    embed,
    
    /// <remarks/>
    outputFileFormat,
    
    /// <remarks/>
    colorMode,
    
    /// <remarks/>
    colors,
    
    /// <remarks/>
    retainTransparency,
    
    /// <remarks/>
    resolution,
    
    /// <remarks/>
    resolutionUnits,
    
    /// <remarks/>
    resizeType,
    
    /// <remarks/>
    resizeHeight,
    
    /// <remarks/>
    resizeWidth,
    
    /// <remarks/>
    resizeUnits,
    
    /// <remarks/>
    resizePercent,
    
    /// <remarks/>
    compressionQuality,
    
    /// <remarks/>
    compressionType,
    
    /// <remarks/>
    endian,
    
    /// <remarks/>
    dngJpegPreview,
    
    /// <remarks/>
    dngEmbedRawFile,
    
    /// <remarks/>
    dngCameraRawVersion,
    
    /// <remarks/>
    watermark,
    
    /// <remarks/>
    watermarkType,
    
    /// <remarks/>
    watermarkPosition,
    
    /// <remarks/>
    watermarkFont,
    
    /// <remarks/>
    watermarkFontStyle,
    
    /// <remarks/>
    watermarkFontSize,
    
    /// <remarks/>
    watermarkTransparency,
    
    /// <remarks/>
    watermarkColor,
    
    /// <remarks/>
    processImageFilesOnly,
    
    /// <remarks/>
    autoRename,
    
    /// <remarks/>
    frontRenameType,
    
    /// <remarks/>
    frontRenameValue,
    
    /// <remarks/>
    middleRenameType,
    
    /// <remarks/>
    middleRenameValue,
    
    /// <remarks/>
    endRenameType,
    
    /// <remarks/>
    endRenameValue,
    
    /// <remarks/>
    destination,
    
    /// <remarks/>
    addToCatalog,
    
    /// <remarks/>
    pageHeight,
    
    /// <remarks/>
    pageWidth,
    
    /// <remarks/>
    gridRows,
    
    /// <remarks/>
    gridColumns,
    
    /// <remarks/>
    header,
    
    /// <remarks/>
    footer,
    
    /// <remarks/>
    fieldname,
    
    /// <remarks/>
    importFile,
    
    /// <remarks/>
    itemCount,
    
    /// <remarks/>
    filename,
    
    /// <remarks/>
    originalOnly,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://portfolio.extensis/service/asset")]
public enum colorMode {
    
    /// <remarks/>
    RGB,
    
    /// <remarks/>
    CMYK,
    
    /// <remarks/>
    Grayscale,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://portfolio.extensis/service/asset")]
public enum outputFileFormat {
    
    /// <remarks/>
    JPEG,
    
    /// <remarks/>
    TIFF,
    
    /// <remarks/>
    DNG,
    
    /// <remarks/>
    AVI,
    
    /// <remarks/>
    FLV,
    
    /// <remarks/>
    MOV,
    
    /// <remarks/>
    MP4,
    
    /// <remarks/>
    MPG,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://portfolio.extensis/service/asset")]
public enum outputDestination {
    
    /// <remarks/>
    sameFolder,
    
    /// <remarks/>
    replace,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://portfolio.extensis/service/asset")]
public enum renameType {
    
    /// <remarks/>
    filename,
    
    /// <remarks/>
    text,
    
    /// <remarks/>
    numberFrom,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://portfolio.extensis/service/asset")]
public enum dngEmbedRawFile {
    
    /// <remarks/>
    embedRawFile,
    
    /// <remarks/>
    dontEmbedRawFile,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://portfolio.extensis/service/asset")]
public enum watermarkType {
    
    /// <remarks/>
    text,
    
    /// <remarks/>
    image,
    
    /// <remarks/>
    metadata,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://portfolio.extensis/service/asset")]
public enum watermarkPosition {
    
    /// <remarks/>
    center,
    
    /// <remarks/>
    fit,
    
    /// <remarks/>
    topLeft,
    
    /// <remarks/>
    topRight,
    
    /// <remarks/>
    bottomLeft,
    
    /// <remarks/>
    bottomRight,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://portfolio.extensis/service/asset")]
public enum addToCatalog {
    
    /// <remarks/>
    addToCatalog,
    
    /// <remarks/>
    dontAddToCatalog,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://portfolio.extensis/service/asset")]
public enum compressionType {
    
    /// <remarks/>
    None,
    
    /// <remarks/>
    Zip,
    
    /// <remarks/>
    JPEG,
    
    /// <remarks/>
    LZW,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://portfolio.extensis/service/asset")]
public enum dngCameraRawVersion {
    
    /// <remarks/>
    FiveFourPlus,
    
    /// <remarks/>
    FourSixPlus,
    
    /// <remarks/>
    FourOnePlus,
    
    /// <remarks/>
    TwoFourPlus,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://portfolio.extensis/service/asset")]
public enum dngJpegPreviewType {
    
    /// <remarks/>
    None,
    
    /// <remarks/>
    Medium,
    
    /// <remarks/>
    Large,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://portfolio.extensis/service/asset")]
public enum resizeType {
    
    /// <remarks/>
    percent,
    
    /// <remarks/>
    fitWithin,
    
    /// <remarks/>
    expandCrop,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://portfolio.extensis/service/asset")]
public enum unit {
    
    /// <remarks/>
    pixels,
    
    /// <remarks/>
    inches,
    
    /// <remarks/>
    centimeters,
    
    /// <remarks/>
    millimeters,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void addAssetsByPathCompletedEventHandler(object sender, addAssetsByPathCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class addAssetsByPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal addAssetsByPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void addItemsToGalleryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void cancelJobCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void createGalleryCompletedEventHandler(object sender, createGalleryCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class createGalleryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal createGalleryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public gallery Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((gallery)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void getWatchFolderCompletedEventHandler(object sender, getWatchFolderCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getWatchFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getWatchFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public watchFolder Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((watchFolder)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void addWatchFolderCompletedEventHandler(object sender, addWatchFolderCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class addWatchFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal addWatchFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public watchFolder Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((watchFolder)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void updateWatchFolderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void removeWatchFolderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void createSubfolderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void deleteGalleryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void deleteSubfolderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void getAssetPreviewCompletedEventHandler(object sender, getAssetPreviewCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getAssetPreviewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getAssetPreviewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void getAssetsCompletedEventHandler(object sender, getAssetsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getAssetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getAssetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public assetQueryResults Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((assetQueryResults)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void getAutomationScriptsCompletedEventHandler(object sender, getAutomationScriptsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getAutomationScriptsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getAutomationScriptsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void getCatalogPermissionsCompletedEventHandler(object sender, getCatalogPermissionsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getCatalogPermissionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getCatalogPermissionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public catalogPermissions[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((catalogPermissions[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void getCatalogsCompletedEventHandler(object sender, getCatalogsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getCatalogsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getCatalogsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public catalog[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((catalog[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void getDetailsForWatchFolderCompletedEventHandler(object sender, getDetailsForWatchFolderCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getDetailsForWatchFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getDetailsForWatchFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public attribute[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((attribute[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void getErrorDetailsForJobCompletedEventHandler(object sender, getErrorDetailsForJobCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getErrorDetailsForJobCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getErrorDetailsForJobCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public attribute[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((attribute[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void getFieldDefinitionsCompletedEventHandler(object sender, getFieldDefinitionsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getFieldDefinitionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getFieldDefinitionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public fieldDefinition[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((fieldDefinition[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void addOrRemovePredefinedValuesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void setPredefinedValuesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void addNestedPredefinedValuesCompletedEventHandler(object sender, addNestedPredefinedValuesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class addNestedPredefinedValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal addNestedPredefinedValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public nestedValue[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((nestedValue[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void changeNestedPredefinedValueCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void moveNestedPredefinedValueCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void deleteNestedPredefinedValuesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void getFolderTreeForWatchFolderCompletedEventHandler(object sender, getFolderTreeForWatchFolderCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getFolderTreeForWatchFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getFolderTreeForWatchFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public folder Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((folder)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void getGalleriesCompletedEventHandler(object sender, getGalleriesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getGalleriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getGalleriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public gallery[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((gallery[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void getJobIDsCompletedEventHandler(object sender, getJobIDsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getJobIDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getJobIDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void getRSAPublicEncryptionKeyCompletedEventHandler(object sender, getRSAPublicEncryptionKeyCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getRSAPublicEncryptionKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getRSAPublicEncryptionKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public keySpecification Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((keySpecification)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void getServerFeaturesCompletedEventHandler(object sender, getServerFeaturesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getServerFeaturesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getServerFeaturesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void getServerSystemInformationCompletedEventHandler(object sender, getServerSystemInformationCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getServerSystemInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getServerSystemInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public attribute[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((attribute[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void getStatusForJobsCompletedEventHandler(object sender, getStatusForJobsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getStatusForJobsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getStatusForJobsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public jobStatus[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((jobStatus[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void getWatchFoldersCompletedEventHandler(object sender, getWatchFoldersCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getWatchFoldersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getWatchFoldersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public watchFolder[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((watchFolder[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void loginCompletedEventHandler(object sender, loginCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class loginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal loginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void logoutCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void moveSubfolderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void removeAssetsFromCatalogCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void removeItemsFromGalleryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void runJobCompletedEventHandler(object sender, runJobCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class runJobCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal runJobCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void getCatalogingOptionsCompletedEventHandler(object sender, getCatalogingOptionsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getCatalogingOptionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getCatalogingOptionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public catalogingOptions Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((catalogingOptions)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void getIngestConfigCompletedEventHandler(object sender, getIngestConfigCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getIngestConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getIngestConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ingestConfig Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ingestConfig)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void synchronizeFolderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void getServerFolderNamesCompletedEventHandler(object sender, getServerFolderNamesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getServerFolderNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getServerFolderNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void updateAssetFieldValuesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void updateGalleryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void createTaskPresetCompletedEventHandler(object sender, createTaskPresetCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class createTaskPresetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal createTaskPresetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public task Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((task)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void listTaskSettingsCompletedEventHandler(object sender, listTaskSettingsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class listTaskSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal listTaskSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Nullable<taskSetting>[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Nullable<taskSetting>[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void listColorModeCompletedEventHandler(object sender, listColorModeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class listColorModeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal listColorModeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Nullable<colorMode>[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Nullable<colorMode>[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void listOutputFileFormatCompletedEventHandler(object sender, listOutputFileFormatCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class listOutputFileFormatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal listOutputFileFormatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Nullable<outputFileFormat>[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Nullable<outputFileFormat>[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void listOutputDestinationCompletedEventHandler(object sender, listOutputDestinationCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class listOutputDestinationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal listOutputDestinationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Nullable<outputDestination>[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Nullable<outputDestination>[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void listRenameTypeCompletedEventHandler(object sender, listRenameTypeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class listRenameTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal listRenameTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Nullable<renameType>[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Nullable<renameType>[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void listDNGEmbedRawFileCompletedEventHandler(object sender, listDNGEmbedRawFileCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class listDNGEmbedRawFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal listDNGEmbedRawFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Nullable<dngEmbedRawFile>[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Nullable<dngEmbedRawFile>[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void listWatermarkTypeCompletedEventHandler(object sender, listWatermarkTypeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class listWatermarkTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal listWatermarkTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Nullable<watermarkType>[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Nullable<watermarkType>[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void listWatermarkPositionCompletedEventHandler(object sender, listWatermarkPositionCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class listWatermarkPositionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal listWatermarkPositionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Nullable<watermarkPosition>[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Nullable<watermarkPosition>[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void listAddToCatalogCompletedEventHandler(object sender, listAddToCatalogCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class listAddToCatalogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal listAddToCatalogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Nullable<addToCatalog>[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Nullable<addToCatalog>[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void listCompressionTypeCompletedEventHandler(object sender, listCompressionTypeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class listCompressionTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal listCompressionTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Nullable<compressionType>[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Nullable<compressionType>[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void listDngCameraRawVersionCompletedEventHandler(object sender, listDngCameraRawVersionCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class listDngCameraRawVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal listDngCameraRawVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Nullable<dngCameraRawVersion>[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Nullable<dngCameraRawVersion>[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void listDngJpegPreviewTypeCompletedEventHandler(object sender, listDngJpegPreviewTypeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class listDngJpegPreviewTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal listDngJpegPreviewTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Nullable<dngJpegPreviewType>[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Nullable<dngJpegPreviewType>[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void listResizeTypeCompletedEventHandler(object sender, listResizeTypeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class listResizeTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal listResizeTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Nullable<resizeType>[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Nullable<resizeType>[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void listUnitCompletedEventHandler(object sender, listUnitCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class listUnitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal listUnitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Nullable<unit>[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Nullable<unit>[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void deleteTaskCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void getAssetsWithBatchOfValuesCompletedEventHandler(object sender, getAssetsWithBatchOfValuesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getAssetsWithBatchOfValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getAssetsWithBatchOfValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public assetQueryResults Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((assetQueryResults)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void getCatalogChangeStatusCompletedEventHandler(object sender, getCatalogChangeStatusCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getCatalogChangeStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getCatalogChangeStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public catalogChangeStatus[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((catalogChangeStatus[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void getDefaultViewSettingsCompletedEventHandler(object sender, getDefaultViewSettingsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getDefaultViewSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getDefaultViewSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void getExclusionInfoForCatalogCompletedEventHandler(object sender, getExclusionInfoForCatalogCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getExclusionInfoForCatalogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getExclusionInfoForCatalogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public exclusionInfo Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((exclusionInfo)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void getTaskPresetsCompletedEventHandler(object sender, getTaskPresetsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getTaskPresetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getTaskPresetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public task[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((task[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void getUnmatchedFieldValuesFromBatchFindCompletedEventHandler(object sender, getUnmatchedFieldValuesFromBatchFindCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getUnmatchedFieldValuesFromBatchFindCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getUnmatchedFieldValuesFromBatchFindCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void getUserPreferencesCompletedEventHandler(object sender, getUserPreferencesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getUserPreferencesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getUserPreferencesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void getUserViewSettingsCompletedEventHandler(object sender, getUserViewSettingsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getUserViewSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getUserViewSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void primeAssetPreviewsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void setDefaultViewSettingsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void setSessionInactivityTimeoutCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void setUserPreferencesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void setUserViewSettingsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void updateTaskPresetCompletedEventHandler(object sender, updateTaskPresetCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class updateTaskPresetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal updateTaskPresetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public task Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((task)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void uploadFileCompletedEventHandler(object sender, uploadFileCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class uploadFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal uploadFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void getVideoExtensionsCompletedEventHandler(object sender, getVideoExtensionsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getVideoExtensionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getVideoExtensionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void getAudioExtensionsCompletedEventHandler(object sender, getAudioExtensionsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getAudioExtensionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getAudioExtensionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
public delegate void completionCompletedEventHandler(object sender, completionCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class completionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal completionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string[])(this.results[0]));
        }
    }
}
